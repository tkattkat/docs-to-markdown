{
  "pages": {
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYvZ2V0X3N0YXJ0ZWQvaW50cm9kdWN0aW9u": {
      "url": "https://docs.stagehand.dev/get_started/introduction",
      "title": "Introduction - ü§ò Stagehand",
      "markdownContent": "Introduction - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nIntroduction\nStagehand is the easiest way to build browser automations. It is completely interoperable with [Playwright](https://playwright.dev/) and has seamless integration with [Browserbase](https://browserbase.com).\nIt offers three simple AI APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) on top of the base Playwright\n```\nPage\n```\n class that provide the building blocks for web automation via natural language.\nAnything that can be done in a browser can be done with Stagehand. Think about stuff like:\n1.  Log into Amazon, search for AirPods, and buy the most relevant product\n2.  Go to Hacker News and extract the top stories of the day\n3.  Go to Doordash, find the cheapest pad thai, and order it to your house\nThese automations can be built with Playwright, but it can be very cumbersome to write the code, and it will be very vulnerable to minor changes in the UI.\nStagehand‚Äôs AI, especially when combined with Browserbase‚Äôs stealth mode, make it easy to write durable code and bypass bot detection and captchas.\n##\n[‚Äã](#lights%2C-camera%2C-act)\nLights, Camera,\n```\nact()\n```\nLet‚Äôs get you started with Stagehand.\n[\n## Quickstart\nBuild browser automations in no time.\n](/get_started/quickstart)[\n## How Stagehand Works\nGo behind the scenes with Stagehand.\n](/get_started/walkthrough)\n##\n[‚Äã](#faq)\nFAQ\n###\n[‚Äã](#what-is-stagehand%3F)\nWhat is Stagehand?\nStagehand is the AI-powered successor to [Playwright](https://playwright.dev), offering three simple APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) that provide the building blocks for web automation via natural language.\nThe goal of Stagehand is to provide a lightweight model-agnostic framework, without overly complex abstractions. It‚Äôs not going to order you a pizza, but it will help you execute steps like\n```\n\"click the order button\"\n```\n.\nEach Stagehand function takes in an atomic instruction, such as\n```\nact(\"click the login button\")\n```\n or\n```\nextract(\"find the price of pad thai\")\n```\n, generates the appropriate Playwright code to accomplish that instruction, and executes it.\n###\n[‚Äã](#what-is-a-web-agent%3F)\nWhat is a web agent?\nA web agent is an AI agent that aims to browse the web like a human. They can navigate the web, interact with web pages, and perform tasks. You could imagine something like telling a bot ‚Äúhere‚Äôs my credit card, order me pad thai‚Äù and having it do that entirely autonomously.\n###\n[‚Äã](#is-stagehand-a-web-agent%3F)\nIs Stagehand a web agent?\nNo, Stagehand is not a web agent. It is a set of tools that enables and empowers web agents and developers building them. A web agent could take an instruction like ‚Äúorder me pad thai‚Äù and use Stagehand to navigate to the restaurant‚Äôs website, find the menu, and order the food.\n###\n[‚Äã](#what-are-some-best-practices-for-using-stagehand%3F)\nWhat are some best practices for using Stagehand?\nStagehand is something like Github Copilot, but for web automation. It‚Äôs not a good idea to ask it to write your entire application, but it‚Äôs great for quickly generating self-healing Playwright code to accomplish specific tasks.\nTherefore, instructions should be atomic to increase reliability, and step planning should be handled by the higher level agent. You can use\n```\nobserve()\n```\n to get a suggested list of actions that can be taken on the current page, and then use those to ground your step planning prompts.\n###\n[‚Äã](#who-built-stagehand%3F)\nWho built Stagehand?\nStagehand is open source and maintained by the [Browserbase](https://browserbase.com) team. We envision a world in which web agents are built with Stagehand on Browserbase.\nWe believe that by enabling more developers to build reliable web automations, we‚Äôll expand the market of developers who benefit from our headless browser infrastructure. This is the framework that we wished we had while tinkering on our own applications, and we‚Äôre excited to share it with you.\nIf you‚Äôve made it this far, hi mom!\n[Quickstart](/get_started/quickstart)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction#lights%2C-camera%2C-act",
        "https://docs.stagehand.dev/get_started/quickstart",
        "https://docs.stagehand.dev/get_started/walkthrough",
        "https://docs.stagehand.dev/get_started/introduction#faq",
        "https://docs.stagehand.dev/get_started/introduction#what-is-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-is-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#is-stagehand-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-are-some-best-practices-for-using-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#who-built-stagehand%3F"
      ],
      "codeExamples": [
        {
          "code": "\"click the order button\"",
          "language": "",
          "description": ""
        },
        {
          "code": "act(\"click the login button\")",
          "language": "",
          "description": ""
        },
        {
          "code": "extract(\"find the price of pad thai\")",
          "language": "",
          "description": ""
        }
      ],
      "apiSignatures": [
        {
          "name": "‚ÄãLights, Camera, act()",
          "signature": "‚ÄãLights, Camera, act()",
          "description": "Let‚Äôs get you started with Stagehand."
        }
      ],
      "tokenCount": 936,
      "isApiDoc": true,
      "hasBeenSummarized": false
    },
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYvZ2V0X3N0YXJ0ZWQvaW50cm9kdWN0aW9uI2xpZ2h0cyUyQy1jYW1lcmElMkMtYWN0": {
      "url": "https://docs.stagehand.dev/get_started/introduction#lights%2C-camera%2C-act",
      "title": "Introduction - ü§ò Stagehand",
      "markdownContent": "Introduction - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nIntroduction\nStagehand is the easiest way to build browser automations. It is completely interoperable with [Playwright](https://playwright.dev/) and has seamless integration with [Browserbase](https://browserbase.com).\nIt offers three simple AI APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) on top of the base Playwright\n```\nPage\n```\n class that provide the building blocks for web automation via natural language.\nAnything that can be done in a browser can be done with Stagehand. Think about stuff like:\n1.  Log into Amazon, search for AirPods, and buy the most relevant product\n2.  Go to Hacker News and extract the top stories of the day\n3.  Go to Doordash, find the cheapest pad thai, and order it to your house\nThese automations can be built with Playwright, but it can be very cumbersome to write the code, and it will be very vulnerable to minor changes in the UI.\nStagehand‚Äôs AI, especially when combined with Browserbase‚Äôs stealth mode, make it easy to write durable code and bypass bot detection and captchas.\n##\n[‚Äã](#lights%2C-camera%2C-act)\nLights, Camera,\n```\nact()\n```\nLet‚Äôs get you started with Stagehand.\n[\n## Quickstart\nBuild browser automations in no time.\n](/get_started/quickstart)[\n## How Stagehand Works\nGo behind the scenes with Stagehand.\n](/get_started/walkthrough)\n##\n[‚Äã](#faq)\nFAQ\n###\n[‚Äã](#what-is-stagehand%3F)\nWhat is Stagehand?\nStagehand is the AI-powered successor to [Playwright](https://playwright.dev), offering three simple APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) that provide the building blocks for web automation via natural language.\nThe goal of Stagehand is to provide a lightweight model-agnostic framework, without overly complex abstractions. It‚Äôs not going to order you a pizza, but it will help you execute steps like\n```\n\"click the order button\"\n```\n.\nEach Stagehand function takes in an atomic instruction, such as\n```\nact(\"click the login button\")\n```\n or\n```\nextract(\"find the price of pad thai\")\n```\n, generates the appropriate Playwright code to accomplish that instruction, and executes it.\n###\n[‚Äã](#what-is-a-web-agent%3F)\nWhat is a web agent?\nA web agent is an AI agent that aims to browse the web like a human. They can navigate the web, interact with web pages, and perform tasks. You could imagine something like telling a bot ‚Äúhere‚Äôs my credit card, order me pad thai‚Äù and having it do that entirely autonomously.\n###\n[‚Äã](#is-stagehand-a-web-agent%3F)\nIs Stagehand a web agent?\nNo, Stagehand is not a web agent. It is a set of tools that enables and empowers web agents and developers building them. A web agent could take an instruction like ‚Äúorder me pad thai‚Äù and use Stagehand to navigate to the restaurant‚Äôs website, find the menu, and order the food.\n###\n[‚Äã](#what-are-some-best-practices-for-using-stagehand%3F)\nWhat are some best practices for using Stagehand?\nStagehand is something like Github Copilot, but for web automation. It‚Äôs not a good idea to ask it to write your entire application, but it‚Äôs great for quickly generating self-healing Playwright code to accomplish specific tasks.\nTherefore, instructions should be atomic to increase reliability, and step planning should be handled by the higher level agent. You can use\n```\nobserve()\n```\n to get a suggested list of actions that can be taken on the current page, and then use those to ground your step planning prompts.\n###\n[‚Äã](#who-built-stagehand%3F)\nWho built Stagehand?\nStagehand is open source and maintained by the [Browserbase](https://browserbase.com) team. We envision a world in which web agents are built with Stagehand on Browserbase.\nWe believe that by enabling more developers to build reliable web automations, we‚Äôll expand the market of developers who benefit from our headless browser infrastructure. This is the framework that we wished we had while tinkering on our own applications, and we‚Äôre excited to share it with you.\nIf you‚Äôve made it this far, hi mom!\n[Quickstart](/get_started/quickstart)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction#lights%2C-camera%2C-act",
        "https://docs.stagehand.dev/get_started/quickstart",
        "https://docs.stagehand.dev/get_started/walkthrough",
        "https://docs.stagehand.dev/get_started/introduction#faq",
        "https://docs.stagehand.dev/get_started/introduction#what-is-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-is-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#is-stagehand-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-are-some-best-practices-for-using-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#who-built-stagehand%3F"
      ],
      "codeExamples": [
        {
          "code": "\"click the order button\"",
          "language": "",
          "description": ""
        },
        {
          "code": "act(\"click the login button\")",
          "language": "",
          "description": ""
        },
        {
          "code": "extract(\"find the price of pad thai\")",
          "language": "",
          "description": ""
        }
      ],
      "apiSignatures": [
        {
          "name": "‚ÄãLights, Camera, act()",
          "signature": "‚ÄãLights, Camera, act()",
          "description": "Let‚Äôs get you started with Stagehand."
        }
      ],
      "tokenCount": 936,
      "isApiDoc": true,
      "hasBeenSummarized": false
    },
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYvZ2V0X3N0YXJ0ZWQvcXVpY2tzdGFydA": {
      "url": "https://docs.stagehand.dev/get_started/quickstart",
      "title": "Quickstart - ü§ò Stagehand",
      "markdownContent": "Quickstart - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nQuickstart\n1\nPrerequisites\nBefore you begin, you‚Äôll need to install Node.js and NPM. We highly recommend using [nvm](https://github.com/nvm-sh/nvm) to manage your Node.js versions, and running on Node version 20+.\nWe highly recommend using the Node.js runtime environment to run Stagehand scripts, as opposed to newer alternatives like Deno or Bun.\n2\nCreate a new project\nYou can use [npx](https://docs.npmjs.com/cli/v8/commands/npx) to create a new project. You should have npx included with\n```\nnpm\n```\n, the default package manager for Node.js.\n*   npm\n*   pnpm\n*   yarn\n```bash\n```bash\nnpx create-browser-app --example quickstart\n```\n```\nTo create a blank Stagehand project without the quickstart example, run:\n*   npm\n*   pnpm\n*   yarn\n```bash\n```bash\nnpx create-browser-app\n```\n```\nThis will create a new directory called\n```\nmy-app\n```\n, and install the Stagehand package. It will ask you the following questions:\n```plaintext\n```\n‚úî Select AI model to use: OpenAI GPT-4o‚úî Would you like to run locally or on Browserbase? Browserbase‚úî Enable DOM debugging features? Yes‚úî Enable prompt caching? Yes\n```\n```\n### Large Language Models\nIn addition, you‚Äôll need either an OpenAI API Key or Anthropic API key. Stagehand allows you to choose between the following models:\n*   OpenAI GPT-4o ([Get API Key](https://platform.openai.com/api-keys))\n*   Anthropic Claude 3.5 Sonnet ([Get API Key](https://console.anthropic.com/settings/keys))\nWe also support GPT-4o-mini, but it is not recommended for production use.\n### Browserbase\nLastly, if you want access to advanced features like custom contexts, extensions, and captcha solving, you‚Äôll need a Browserbase account. We give you 10 free sessions to get started. You can get your Project ID and API Key from the [Browserbase dashboard](https://www.browserbase.com/settings).\n3\nInstall dependencies and run the script\n*   npm\n*   pnpm\n*   yarn\n```bash\n```bash\ncd my-appnpminstallnpm run start\n```\n```\nUse the package manager of your choice to install the dependencies. We also have a\n```\npostinstall\n```\n script that will automatically install the Playwright browser with\n```\nplaywright install\n```\n.\n[](https://github.com/browserbase/playbook)\n[\n## Check out the Playbook\n](https://github.com/browserbase/playbook)\n[If you‚Äôre interested in seeing the source code for what‚Äôs created, you can check out the](https://github.com/browserbase/playbook) [Browserbase Playbook](https://github.com/browserbase/playbook).\n[](https://github.com/browserbase/create-browser-app)\n[\n## Check out the CLI repo\n](https://github.com/browserbase/create-browser-app)\n[If you‚Äôre interested in the source code for the\n```\ncreate-browser-app\n```\n CLI, you can check out the](https://github.com/browserbase/create-browser-app) [CLI repo](https://github.com/browserbase/create-browser-app).\n[Introduction](/get_started/introduction)[Best Practices](/get_started/best_practices)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction",
        "https://docs.stagehand.dev/get_started/best_practices"
      ],
      "codeExamples": [
        {
          "code": "npx create-browser-app --example quickstart",
          "language": "",
          "description": ""
        },
        {
          "code": "npx create-browser-app --example quickstart",
          "language": "",
          "description": ""
        },
        {
          "code": "npx create-browser-app --example quickstart",
          "language": "bash",
          "description": ""
        },
        {
          "code": "npx create-browser-app --example quickstart",
          "language": "bash",
          "description": ""
        },
        {
          "code": "npx create-browser-app",
          "language": "",
          "description": ""
        },
        {
          "code": "npx create-browser-app",
          "language": "",
          "description": ""
        },
        {
          "code": "npx create-browser-app",
          "language": "bash",
          "description": ""
        },
        {
          "code": "npx create-browser-app",
          "language": "bash",
          "description": ""
        },
        {
          "code": "‚úî Select AI model to use: OpenAI GPT-4o‚úî Would you like to run locally or on Browserbase? Browserbase‚úî Enable DOM debugging features? Yes‚úî Enable prompt caching? Yes",
          "language": "",
          "description": "This will create a new directory called my-app, and install the Stagehand package. It will ask you the following questions:"
        },
        {
          "code": "‚úî Select AI model to use: OpenAI GPT-4o‚úî Would you like to run locally or on Browserbase? Browserbase‚úî Enable DOM debugging features? Yes‚úî Enable prompt caching? Yes",
          "language": "",
          "description": ""
        },
        {
          "code": "‚úî Select AI model to use: OpenAI GPT-4o‚úî Would you like to run locally or on Browserbase? Browserbase‚úî Enable DOM debugging features? Yes‚úî Enable prompt caching? Yes",
          "language": "plaintext",
          "description": ""
        },
        {
          "code": "‚úî Select AI model to use: OpenAI GPT-4o‚úî Would you like to run locally or on Browserbase? Browserbase‚úî Enable DOM debugging features? Yes‚úî Enable prompt caching? Yes",
          "language": "",
          "description": ""
        },
        {
          "code": "cd my-appnpminstallnpm run start",
          "language": "",
          "description": ""
        },
        {
          "code": "cd my-appnpminstallnpm run start",
          "language": "",
          "description": ""
        },
        {
          "code": "cd my-appnpminstallnpm run start",
          "language": "bash",
          "description": ""
        },
        {
          "code": "cd my-appnpminstallnpm run start",
          "language": "bash",
          "description": ""
        },
        {
          "code": "postinstall",
          "language": "",
          "description": ""
        },
        {
          "code": "playwright install",
          "language": "",
          "description": ""
        },
        {
          "code": "create-browser-app",
          "language": "",
          "description": ""
        }
      ],
      "apiSignatures": [],
      "tokenCount": 636,
      "isApiDoc": false,
      "hasBeenSummarized": false
    },
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYv": {
      "url": "https://docs.stagehand.dev/",
      "title": "Introduction - ü§ò Stagehand",
      "markdownContent": "Introduction - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nIntroduction\nStagehand is the easiest way to build browser automations. It is completely interoperable with [Playwright](https://playwright.dev/) and has seamless integration with [Browserbase](https://browserbase.com).\nIt offers three simple AI APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) on top of the base Playwright\n```\nPage\n```\n class that provide the building blocks for web automation via natural language.\nAnything that can be done in a browser can be done with Stagehand. Think about stuff like:\n1.  Log into Amazon, search for AirPods, and buy the most relevant product\n2.  Go to Hacker News and extract the top stories of the day\n3.  Go to Doordash, find the cheapest pad thai, and order it to your house\nThese automations can be built with Playwright, but it can be very cumbersome to write the code, and it will be very vulnerable to minor changes in the UI.\nStagehand‚Äôs AI, especially when combined with Browserbase‚Äôs stealth mode, make it easy to write durable code and bypass bot detection and captchas.\n##\n[‚Äã](#lights%2C-camera%2C-act)\nLights, Camera,\n```\nact()\n```\nLet‚Äôs get you started with Stagehand.\n[\n## Quickstart\nBuild browser automations in no time.\n](/get_started/quickstart)[\n## How Stagehand Works\nGo behind the scenes with Stagehand.\n](/get_started/walkthrough)\n##\n[‚Äã](#faq)\nFAQ\n###\n[‚Äã](#what-is-stagehand%3F)\nWhat is Stagehand?\nStagehand is the AI-powered successor to [Playwright](https://playwright.dev), offering three simple APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) that provide the building blocks for web automation via natural language.\nThe goal of Stagehand is to provide a lightweight model-agnostic framework, without overly complex abstractions. It‚Äôs not going to order you a pizza, but it will help you execute steps like\n```\n\"click the order button\"\n```\n.\nEach Stagehand function takes in an atomic instruction, such as\n```\nact(\"click the login button\")\n```\n or\n```\nextract(\"find the price of pad thai\")\n```\n, generates the appropriate Playwright code to accomplish that instruction, and executes it.\n###\n[‚Äã](#what-is-a-web-agent%3F)\nWhat is a web agent?\nA web agent is an AI agent that aims to browse the web like a human. They can navigate the web, interact with web pages, and perform tasks. You could imagine something like telling a bot ‚Äúhere‚Äôs my credit card, order me pad thai‚Äù and having it do that entirely autonomously.\n###\n[‚Äã](#is-stagehand-a-web-agent%3F)\nIs Stagehand a web agent?\nNo, Stagehand is not a web agent. It is a set of tools that enables and empowers web agents and developers building them. A web agent could take an instruction like ‚Äúorder me pad thai‚Äù and use Stagehand to navigate to the restaurant‚Äôs website, find the menu, and order the food.\n###\n[‚Äã](#what-are-some-best-practices-for-using-stagehand%3F)\nWhat are some best practices for using Stagehand?\nStagehand is something like Github Copilot, but for web automation. It‚Äôs not a good idea to ask it to write your entire application, but it‚Äôs great for quickly generating self-healing Playwright code to accomplish specific tasks.\nTherefore, instructions should be atomic to increase reliability, and step planning should be handled by the higher level agent. You can use\n```\nobserve()\n```\n to get a suggested list of actions that can be taken on the current page, and then use those to ground your step planning prompts.\n###\n[‚Äã](#who-built-stagehand%3F)\nWho built Stagehand?\nStagehand is open source and maintained by the [Browserbase](https://browserbase.com) team. We envision a world in which web agents are built with Stagehand on Browserbase.\nWe believe that by enabling more developers to build reliable web automations, we‚Äôll expand the market of developers who benefit from our headless browser infrastructure. This is the framework that we wished we had while tinkering on our own applications, and we‚Äôre excited to share it with you.\nIf you‚Äôve made it this far, hi mom!\n[Quickstart](/get_started/quickstart)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction#lights%2C-camera%2C-act",
        "https://docs.stagehand.dev/get_started/quickstart",
        "https://docs.stagehand.dev/get_started/walkthrough",
        "https://docs.stagehand.dev/get_started/introduction#faq",
        "https://docs.stagehand.dev/get_started/introduction#what-is-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-is-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#is-stagehand-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-are-some-best-practices-for-using-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#who-built-stagehand%3F"
      ],
      "codeExamples": [
        {
          "code": "\"click the order button\"",
          "language": "",
          "description": ""
        },
        {
          "code": "act(\"click the login button\")",
          "language": "",
          "description": ""
        },
        {
          "code": "extract(\"find the price of pad thai\")",
          "language": "",
          "description": ""
        }
      ],
      "apiSignatures": [
        {
          "name": "‚ÄãLights, Camera, act()",
          "signature": "‚ÄãLights, Camera, act()",
          "description": "Let‚Äôs get you started with Stagehand."
        }
      ],
      "tokenCount": 936,
      "isApiDoc": true,
      "hasBeenSummarized": false
    },
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYvZ2V0X3N0YXJ0ZWQvd2Fsa3Rocm91Z2g": {
      "url": "https://docs.stagehand.dev/get_started/walkthrough",
      "title": "How Stagehand Works - ü§ò Stagehand",
      "markdownContent": "How Stagehand Works - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nHow Stagehand Works\n##\n[‚Äã](#how-it-works)\nHow It Works\nThe SDK has two major phases:\n1.  Processing the DOM (including chunking - _see below_).\n2.  Taking LLM powered actions based on the current state of the DOM.\n###\n[‚Äã](#dom-processing)\nDOM processing\nStagehand uses a combination of techniques to prepare the DOM.\nThe DOM Processing steps look as follows:\n1.  Via Playwright, inject a script into the DOM accessible by the SDK that can run processing.\n2.  Crawl the DOM and create a list of candidate elements.\n    *   Candidate elements are either leaf elements (DOM elements that contain actual user facing substance), or are interactive elements.\n    *   Interactive elements are determined by a combination of roles and HTML tags.\n3.  Candidate elements that are not active, visible, or at the top of the DOM are discarded.\n    *   The LLM should only receive elements it can faithfully act on on behalf of the agent/user.\n4.  For each candidate element, an [xPath](https://developer.mozilla.org/en-US/docs/Web/XPath) is generated. This guarantees that if this element is picked by the LLM, we‚Äôll be able to reliably target it.\n5.  Return both the list of candidate elements, as well as the map of elements to xPath selectors across the browser back to the SDK, to be analyzed by the LLM.\n####\n[‚Äã](#chunking)\nChunking\nWhile LLMs will continue to increase context window length and reduce latency, giving any reasoning system less stuff to think about should make it more reliable. As a result, DOM processing is done in chunks in order to keep the context small per inference call. In order to chunk, the SDK considers a candidate element that starts in a section of the viewport to be a part of that chunk. In the future, padding will be added to ensure that an individual chunk does not lack relevant context. See this diagram for how it looks:\n###\n[‚Äã](#vision)\nVision\nThe\n```\nact()\n```\n and\n```\nobserve()\n```\n methods can take a\n```\nuseVision\n```\n flag. If this is set to\n```\ntrue\n```\n, the LLM will be provided with a annotated screenshot of the current page to identify which elements to act on. This is useful for complex DOMs that the LLM has a hard time reasoning about, even after processing and chunking. By default, this flag is set to\n```\n\"fallback\"\n```\n, which means that if the LLM fails to successfully identify a single element, Stagehand will retry the attempt using vision.\n###\n[‚Äã](#llm-analysis)\nLLM analysis\nNow we have a list of candidate elements and a way to select them. We can present those elements with additional context to the LLM for extraction or action. While untested on a large scale, presenting a ‚Äúnumbered list of elements‚Äù guides the model to not treat the context as a full DOM, but as a list of related but independent elements to operate on.\nIn the case of action, we ask the LLM to write a playwright method in order to do the correct thing. In our limited testing, playwright syntax is much more effective than relying on built in javascript APIs, possibly due to tokenization.\nLastly, we use the LLM to write future instructions to itself to help manage its progress and goals when operating across chunks.\n###\n[‚Äã](#stagehand-vs-playwright)\nStagehand vs Playwright\nBelow is an example of how to extract a list of companies from the AI Grant website using both Stagehand and Playwright.\n[Best Practices](/get_started/best_practices)[Contribute to Stagehand](/contributions/contributing)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction#how-it-works",
        "https://docs.stagehand.dev/get_started/introduction#dom-processing",
        "https://docs.stagehand.dev/get_started/introduction#chunking",
        "https://docs.stagehand.dev/get_started/introduction#vision",
        "https://docs.stagehand.dev/get_started/introduction#llm-analysis",
        "https://docs.stagehand.dev/get_started/introduction#stagehand-vs-playwright",
        "https://docs.stagehand.dev/get_started/best_practices",
        "https://docs.stagehand.dev/contributions/contributing"
      ],
      "codeExamples": [
        {
          "code": "\"fallback\"",
          "language": "",
          "description": ""
        }
      ],
      "apiSignatures": [],
      "tokenCount": 834,
      "isApiDoc": false,
      "hasBeenSummarized": false
    },
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYvZ2V0X3N0YXJ0ZWQvaW50cm9kdWN0aW9uI3doYXQtaXMtc3RhZ2VoYW5kJTNG": {
      "url": "https://docs.stagehand.dev/get_started/introduction#what-is-stagehand%3F",
      "title": "Introduction - ü§ò Stagehand",
      "markdownContent": "Introduction - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nIntroduction\nStagehand is the easiest way to build browser automations. It is completely interoperable with [Playwright](https://playwright.dev/) and has seamless integration with [Browserbase](https://browserbase.com).\nIt offers three simple AI APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) on top of the base Playwright\n```\nPage\n```\n class that provide the building blocks for web automation via natural language.\nAnything that can be done in a browser can be done with Stagehand. Think about stuff like:\n1.  Log into Amazon, search for AirPods, and buy the most relevant product\n2.  Go to Hacker News and extract the top stories of the day\n3.  Go to Doordash, find the cheapest pad thai, and order it to your house\nThese automations can be built with Playwright, but it can be very cumbersome to write the code, and it will be very vulnerable to minor changes in the UI.\nStagehand‚Äôs AI, especially when combined with Browserbase‚Äôs stealth mode, make it easy to write durable code and bypass bot detection and captchas.\n##\n[‚Äã](#lights%2C-camera%2C-act)\nLights, Camera,\n```\nact()\n```\nLet‚Äôs get you started with Stagehand.\n[\n## Quickstart\nBuild browser automations in no time.\n](/get_started/quickstart)[\n## How Stagehand Works\nGo behind the scenes with Stagehand.\n](/get_started/walkthrough)\n##\n[‚Äã](#faq)\nFAQ\n###\n[‚Äã](#what-is-stagehand%3F)\nWhat is Stagehand?\nStagehand is the AI-powered successor to [Playwright](https://playwright.dev), offering three simple APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) that provide the building blocks for web automation via natural language.\nThe goal of Stagehand is to provide a lightweight model-agnostic framework, without overly complex abstractions. It‚Äôs not going to order you a pizza, but it will help you execute steps like\n```\n\"click the order button\"\n```\n.\nEach Stagehand function takes in an atomic instruction, such as\n```\nact(\"click the login button\")\n```\n or\n```\nextract(\"find the price of pad thai\")\n```\n, generates the appropriate Playwright code to accomplish that instruction, and executes it.\n###\n[‚Äã](#what-is-a-web-agent%3F)\nWhat is a web agent?\nA web agent is an AI agent that aims to browse the web like a human. They can navigate the web, interact with web pages, and perform tasks. You could imagine something like telling a bot ‚Äúhere‚Äôs my credit card, order me pad thai‚Äù and having it do that entirely autonomously.\n###\n[‚Äã](#is-stagehand-a-web-agent%3F)\nIs Stagehand a web agent?\nNo, Stagehand is not a web agent. It is a set of tools that enables and empowers web agents and developers building them. A web agent could take an instruction like ‚Äúorder me pad thai‚Äù and use Stagehand to navigate to the restaurant‚Äôs website, find the menu, and order the food.\n###\n[‚Äã](#what-are-some-best-practices-for-using-stagehand%3F)\nWhat are some best practices for using Stagehand?\nStagehand is something like Github Copilot, but for web automation. It‚Äôs not a good idea to ask it to write your entire application, but it‚Äôs great for quickly generating self-healing Playwright code to accomplish specific tasks.\nTherefore, instructions should be atomic to increase reliability, and step planning should be handled by the higher level agent. You can use\n```\nobserve()\n```\n to get a suggested list of actions that can be taken on the current page, and then use those to ground your step planning prompts.\n###\n[‚Äã](#who-built-stagehand%3F)\nWho built Stagehand?\nStagehand is open source and maintained by the [Browserbase](https://browserbase.com) team. We envision a world in which web agents are built with Stagehand on Browserbase.\nWe believe that by enabling more developers to build reliable web automations, we‚Äôll expand the market of developers who benefit from our headless browser infrastructure. This is the framework that we wished we had while tinkering on our own applications, and we‚Äôre excited to share it with you.\nIf you‚Äôve made it this far, hi mom!\n[Quickstart](/get_started/quickstart)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction#lights%2C-camera%2C-act",
        "https://docs.stagehand.dev/get_started/quickstart",
        "https://docs.stagehand.dev/get_started/walkthrough",
        "https://docs.stagehand.dev/get_started/introduction#faq",
        "https://docs.stagehand.dev/get_started/introduction#what-is-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-is-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#is-stagehand-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-are-some-best-practices-for-using-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#who-built-stagehand%3F"
      ],
      "codeExamples": [
        {
          "code": "\"click the order button\"",
          "language": "",
          "description": ""
        },
        {
          "code": "act(\"click the login button\")",
          "language": "",
          "description": ""
        },
        {
          "code": "extract(\"find the price of pad thai\")",
          "language": "",
          "description": ""
        }
      ],
      "apiSignatures": [
        {
          "name": "‚ÄãLights, Camera, act()",
          "signature": "‚ÄãLights, Camera, act()",
          "description": "Let‚Äôs get you started with Stagehand."
        }
      ],
      "tokenCount": 936,
      "isApiDoc": true,
      "hasBeenSummarized": false
    },
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYvZ2V0X3N0YXJ0ZWQvaW50cm9kdWN0aW9uI2ZhcQ": {
      "url": "https://docs.stagehand.dev/get_started/introduction#faq",
      "title": "Introduction - ü§ò Stagehand",
      "markdownContent": "Introduction - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nIntroduction\nStagehand is the easiest way to build browser automations. It is completely interoperable with [Playwright](https://playwright.dev/) and has seamless integration with [Browserbase](https://browserbase.com).\nIt offers three simple AI APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) on top of the base Playwright\n```\nPage\n```\n class that provide the building blocks for web automation via natural language.\nAnything that can be done in a browser can be done with Stagehand. Think about stuff like:\n1.  Log into Amazon, search for AirPods, and buy the most relevant product\n2.  Go to Hacker News and extract the top stories of the day\n3.  Go to Doordash, find the cheapest pad thai, and order it to your house\nThese automations can be built with Playwright, but it can be very cumbersome to write the code, and it will be very vulnerable to minor changes in the UI.\nStagehand‚Äôs AI, especially when combined with Browserbase‚Äôs stealth mode, make it easy to write durable code and bypass bot detection and captchas.\n##\n[‚Äã](#lights%2C-camera%2C-act)\nLights, Camera,\n```\nact()\n```\nLet‚Äôs get you started with Stagehand.\n[\n## Quickstart\nBuild browser automations in no time.\n](/get_started/quickstart)[\n## How Stagehand Works\nGo behind the scenes with Stagehand.\n](/get_started/walkthrough)\n##\n[‚Äã](#faq)\nFAQ\n###\n[‚Äã](#what-is-stagehand%3F)\nWhat is Stagehand?\nStagehand is the AI-powered successor to [Playwright](https://playwright.dev), offering three simple APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) that provide the building blocks for web automation via natural language.\nThe goal of Stagehand is to provide a lightweight model-agnostic framework, without overly complex abstractions. It‚Äôs not going to order you a pizza, but it will help you execute steps like\n```\n\"click the order button\"\n```\n.\nEach Stagehand function takes in an atomic instruction, such as\n```\nact(\"click the login button\")\n```\n or\n```\nextract(\"find the price of pad thai\")\n```\n, generates the appropriate Playwright code to accomplish that instruction, and executes it.\n###\n[‚Äã](#what-is-a-web-agent%3F)\nWhat is a web agent?\nA web agent is an AI agent that aims to browse the web like a human. They can navigate the web, interact with web pages, and perform tasks. You could imagine something like telling a bot ‚Äúhere‚Äôs my credit card, order me pad thai‚Äù and having it do that entirely autonomously.\n###\n[‚Äã](#is-stagehand-a-web-agent%3F)\nIs Stagehand a web agent?\nNo, Stagehand is not a web agent. It is a set of tools that enables and empowers web agents and developers building them. A web agent could take an instruction like ‚Äúorder me pad thai‚Äù and use Stagehand to navigate to the restaurant‚Äôs website, find the menu, and order the food.\n###\n[‚Äã](#what-are-some-best-practices-for-using-stagehand%3F)\nWhat are some best practices for using Stagehand?\nStagehand is something like Github Copilot, but for web automation. It‚Äôs not a good idea to ask it to write your entire application, but it‚Äôs great for quickly generating self-healing Playwright code to accomplish specific tasks.\nTherefore, instructions should be atomic to increase reliability, and step planning should be handled by the higher level agent. You can use\n```\nobserve()\n```\n to get a suggested list of actions that can be taken on the current page, and then use those to ground your step planning prompts.\n###\n[‚Äã](#who-built-stagehand%3F)\nWho built Stagehand?\nStagehand is open source and maintained by the [Browserbase](https://browserbase.com) team. We envision a world in which web agents are built with Stagehand on Browserbase.\nWe believe that by enabling more developers to build reliable web automations, we‚Äôll expand the market of developers who benefit from our headless browser infrastructure. This is the framework that we wished we had while tinkering on our own applications, and we‚Äôre excited to share it with you.\nIf you‚Äôve made it this far, hi mom!\n[Quickstart](/get_started/quickstart)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction#lights%2C-camera%2C-act",
        "https://docs.stagehand.dev/get_started/quickstart",
        "https://docs.stagehand.dev/get_started/walkthrough",
        "https://docs.stagehand.dev/get_started/introduction#faq",
        "https://docs.stagehand.dev/get_started/introduction#what-is-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-is-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#is-stagehand-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-are-some-best-practices-for-using-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#who-built-stagehand%3F"
      ],
      "codeExamples": [
        {
          "code": "\"click the order button\"",
          "language": "",
          "description": ""
        },
        {
          "code": "act(\"click the login button\")",
          "language": "",
          "description": ""
        },
        {
          "code": "extract(\"find the price of pad thai\")",
          "language": "",
          "description": ""
        }
      ],
      "apiSignatures": [
        {
          "name": "‚ÄãLights, Camera, act()",
          "signature": "‚ÄãLights, Camera, act()",
          "description": "Let‚Äôs get you started with Stagehand."
        }
      ],
      "tokenCount": 936,
      "isApiDoc": true,
      "hasBeenSummarized": false
    },
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYvZ2V0X3N0YXJ0ZWQvaW50cm9kdWN0aW9uI2lzLXN0YWdlaGFuZC1hLXdlYi1hZ2VudCUzRg": {
      "url": "https://docs.stagehand.dev/get_started/introduction#is-stagehand-a-web-agent%3F",
      "title": "Introduction - ü§ò Stagehand",
      "markdownContent": "Introduction - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nIntroduction\nStagehand is the easiest way to build browser automations. It is completely interoperable with [Playwright](https://playwright.dev/) and has seamless integration with [Browserbase](https://browserbase.com).\nIt offers three simple AI APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) on top of the base Playwright\n```\nPage\n```\n class that provide the building blocks for web automation via natural language.\nAnything that can be done in a browser can be done with Stagehand. Think about stuff like:\n1.  Log into Amazon, search for AirPods, and buy the most relevant product\n2.  Go to Hacker News and extract the top stories of the day\n3.  Go to Doordash, find the cheapest pad thai, and order it to your house\nThese automations can be built with Playwright, but it can be very cumbersome to write the code, and it will be very vulnerable to minor changes in the UI.\nStagehand‚Äôs AI, especially when combined with Browserbase‚Äôs stealth mode, make it easy to write durable code and bypass bot detection and captchas.\n##\n[‚Äã](#lights%2C-camera%2C-act)\nLights, Camera,\n```\nact()\n```\nLet‚Äôs get you started with Stagehand.\n[\n## Quickstart\nBuild browser automations in no time.\n](/get_started/quickstart)[\n## How Stagehand Works\nGo behind the scenes with Stagehand.\n](/get_started/walkthrough)\n##\n[‚Äã](#faq)\nFAQ\n###\n[‚Äã](#what-is-stagehand%3F)\nWhat is Stagehand?\nStagehand is the AI-powered successor to [Playwright](https://playwright.dev), offering three simple APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) that provide the building blocks for web automation via natural language.\nThe goal of Stagehand is to provide a lightweight model-agnostic framework, without overly complex abstractions. It‚Äôs not going to order you a pizza, but it will help you execute steps like\n```\n\"click the order button\"\n```\n.\nEach Stagehand function takes in an atomic instruction, such as\n```\nact(\"click the login button\")\n```\n or\n```\nextract(\"find the price of pad thai\")\n```\n, generates the appropriate Playwright code to accomplish that instruction, and executes it.\n###\n[‚Äã](#what-is-a-web-agent%3F)\nWhat is a web agent?\nA web agent is an AI agent that aims to browse the web like a human. They can navigate the web, interact with web pages, and perform tasks. You could imagine something like telling a bot ‚Äúhere‚Äôs my credit card, order me pad thai‚Äù and having it do that entirely autonomously.\n###\n[‚Äã](#is-stagehand-a-web-agent%3F)\nIs Stagehand a web agent?\nNo, Stagehand is not a web agent. It is a set of tools that enables and empowers web agents and developers building them. A web agent could take an instruction like ‚Äúorder me pad thai‚Äù and use Stagehand to navigate to the restaurant‚Äôs website, find the menu, and order the food.\n###\n[‚Äã](#what-are-some-best-practices-for-using-stagehand%3F)\nWhat are some best practices for using Stagehand?\nStagehand is something like Github Copilot, but for web automation. It‚Äôs not a good idea to ask it to write your entire application, but it‚Äôs great for quickly generating self-healing Playwright code to accomplish specific tasks.\nTherefore, instructions should be atomic to increase reliability, and step planning should be handled by the higher level agent. You can use\n```\nobserve()\n```\n to get a suggested list of actions that can be taken on the current page, and then use those to ground your step planning prompts.\n###\n[‚Äã](#who-built-stagehand%3F)\nWho built Stagehand?\nStagehand is open source and maintained by the [Browserbase](https://browserbase.com) team. We envision a world in which web agents are built with Stagehand on Browserbase.\nWe believe that by enabling more developers to build reliable web automations, we‚Äôll expand the market of developers who benefit from our headless browser infrastructure. This is the framework that we wished we had while tinkering on our own applications, and we‚Äôre excited to share it with you.\nIf you‚Äôve made it this far, hi mom!\n[Quickstart](/get_started/quickstart)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction#lights%2C-camera%2C-act",
        "https://docs.stagehand.dev/get_started/quickstart",
        "https://docs.stagehand.dev/get_started/walkthrough",
        "https://docs.stagehand.dev/get_started/introduction#faq",
        "https://docs.stagehand.dev/get_started/introduction#what-is-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-is-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#is-stagehand-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-are-some-best-practices-for-using-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#who-built-stagehand%3F"
      ],
      "codeExamples": [
        {
          "code": "\"click the order button\"",
          "language": "",
          "description": ""
        },
        {
          "code": "act(\"click the login button\")",
          "language": "",
          "description": ""
        },
        {
          "code": "extract(\"find the price of pad thai\")",
          "language": "",
          "description": ""
        }
      ],
      "apiSignatures": [
        {
          "name": "‚ÄãLights, Camera, act()",
          "signature": "‚ÄãLights, Camera, act()",
          "description": "Let‚Äôs get you started with Stagehand."
        }
      ],
      "tokenCount": 936,
      "isApiDoc": true,
      "hasBeenSummarized": false
    },
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYvZ2V0X3N0YXJ0ZWQvaW50cm9kdWN0aW9uI3doYXQtaXMtYS13ZWItYWdlbnQlM0Y": {
      "url": "https://docs.stagehand.dev/get_started/introduction#what-is-a-web-agent%3F",
      "title": "Introduction - ü§ò Stagehand",
      "markdownContent": "Introduction - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nIntroduction\nStagehand is the easiest way to build browser automations. It is completely interoperable with [Playwright](https://playwright.dev/) and has seamless integration with [Browserbase](https://browserbase.com).\nIt offers three simple AI APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) on top of the base Playwright\n```\nPage\n```\n class that provide the building blocks for web automation via natural language.\nAnything that can be done in a browser can be done with Stagehand. Think about stuff like:\n1.  Log into Amazon, search for AirPods, and buy the most relevant product\n2.  Go to Hacker News and extract the top stories of the day\n3.  Go to Doordash, find the cheapest pad thai, and order it to your house\nThese automations can be built with Playwright, but it can be very cumbersome to write the code, and it will be very vulnerable to minor changes in the UI.\nStagehand‚Äôs AI, especially when combined with Browserbase‚Äôs stealth mode, make it easy to write durable code and bypass bot detection and captchas.\n##\n[‚Äã](#lights%2C-camera%2C-act)\nLights, Camera,\n```\nact()\n```\nLet‚Äôs get you started with Stagehand.\n[\n## Quickstart\nBuild browser automations in no time.\n](/get_started/quickstart)[\n## How Stagehand Works\nGo behind the scenes with Stagehand.\n](/get_started/walkthrough)\n##\n[‚Äã](#faq)\nFAQ\n###\n[‚Äã](#what-is-stagehand%3F)\nWhat is Stagehand?\nStagehand is the AI-powered successor to [Playwright](https://playwright.dev), offering three simple APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) that provide the building blocks for web automation via natural language.\nThe goal of Stagehand is to provide a lightweight model-agnostic framework, without overly complex abstractions. It‚Äôs not going to order you a pizza, but it will help you execute steps like\n```\n\"click the order button\"\n```\n.\nEach Stagehand function takes in an atomic instruction, such as\n```\nact(\"click the login button\")\n```\n or\n```\nextract(\"find the price of pad thai\")\n```\n, generates the appropriate Playwright code to accomplish that instruction, and executes it.\n###\n[‚Äã](#what-is-a-web-agent%3F)\nWhat is a web agent?\nA web agent is an AI agent that aims to browse the web like a human. They can navigate the web, interact with web pages, and perform tasks. You could imagine something like telling a bot ‚Äúhere‚Äôs my credit card, order me pad thai‚Äù and having it do that entirely autonomously.\n###\n[‚Äã](#is-stagehand-a-web-agent%3F)\nIs Stagehand a web agent?\nNo, Stagehand is not a web agent. It is a set of tools that enables and empowers web agents and developers building them. A web agent could take an instruction like ‚Äúorder me pad thai‚Äù and use Stagehand to navigate to the restaurant‚Äôs website, find the menu, and order the food.\n###\n[‚Äã](#what-are-some-best-practices-for-using-stagehand%3F)\nWhat are some best practices for using Stagehand?\nStagehand is something like Github Copilot, but for web automation. It‚Äôs not a good idea to ask it to write your entire application, but it‚Äôs great for quickly generating self-healing Playwright code to accomplish specific tasks.\nTherefore, instructions should be atomic to increase reliability, and step planning should be handled by the higher level agent. You can use\n```\nobserve()\n```\n to get a suggested list of actions that can be taken on the current page, and then use those to ground your step planning prompts.\n###\n[‚Äã](#who-built-stagehand%3F)\nWho built Stagehand?\nStagehand is open source and maintained by the [Browserbase](https://browserbase.com) team. We envision a world in which web agents are built with Stagehand on Browserbase.\nWe believe that by enabling more developers to build reliable web automations, we‚Äôll expand the market of developers who benefit from our headless browser infrastructure. This is the framework that we wished we had while tinkering on our own applications, and we‚Äôre excited to share it with you.\nIf you‚Äôve made it this far, hi mom!\n[Quickstart](/get_started/quickstart)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction#lights%2C-camera%2C-act",
        "https://docs.stagehand.dev/get_started/quickstart",
        "https://docs.stagehand.dev/get_started/walkthrough",
        "https://docs.stagehand.dev/get_started/introduction#faq",
        "https://docs.stagehand.dev/get_started/introduction#what-is-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-is-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#is-stagehand-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-are-some-best-practices-for-using-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#who-built-stagehand%3F"
      ],
      "codeExamples": [
        {
          "code": "\"click the order button\"",
          "language": "",
          "description": ""
        },
        {
          "code": "act(\"click the login button\")",
          "language": "",
          "description": ""
        },
        {
          "code": "extract(\"find the price of pad thai\")",
          "language": "",
          "description": ""
        }
      ],
      "apiSignatures": [
        {
          "name": "‚ÄãLights, Camera, act()",
          "signature": "‚ÄãLights, Camera, act()",
          "description": "Let‚Äôs get you started with Stagehand."
        }
      ],
      "tokenCount": 936,
      "isApiDoc": true,
      "hasBeenSummarized": false
    },
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYvZ2V0X3N0YXJ0ZWQvaW50cm9kdWN0aW9uI3doYXQtYXJlLXNvbWUtYmVzdC1wcmFjdGljZXMtZm9yLXVzaW5nLXN0YWdlaGFuZCUzRg": {
      "url": "https://docs.stagehand.dev/get_started/introduction#what-are-some-best-practices-for-using-stagehand%3F",
      "title": "Introduction - ü§ò Stagehand",
      "markdownContent": "Introduction - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nIntroduction\nStagehand is the easiest way to build browser automations. It is completely interoperable with [Playwright](https://playwright.dev/) and has seamless integration with [Browserbase](https://browserbase.com).\nIt offers three simple AI APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) on top of the base Playwright\n```\nPage\n```\n class that provide the building blocks for web automation via natural language.\nAnything that can be done in a browser can be done with Stagehand. Think about stuff like:\n1.  Log into Amazon, search for AirPods, and buy the most relevant product\n2.  Go to Hacker News and extract the top stories of the day\n3.  Go to Doordash, find the cheapest pad thai, and order it to your house\nThese automations can be built with Playwright, but it can be very cumbersome to write the code, and it will be very vulnerable to minor changes in the UI.\nStagehand‚Äôs AI, especially when combined with Browserbase‚Äôs stealth mode, make it easy to write durable code and bypass bot detection and captchas.\n##\n[‚Äã](#lights%2C-camera%2C-act)\nLights, Camera,\n```\nact()\n```\nLet‚Äôs get you started with Stagehand.\n[\n## Quickstart\nBuild browser automations in no time.\n](/get_started/quickstart)[\n## How Stagehand Works\nGo behind the scenes with Stagehand.\n](/get_started/walkthrough)\n##\n[‚Äã](#faq)\nFAQ\n###\n[‚Äã](#what-is-stagehand%3F)\nWhat is Stagehand?\nStagehand is the AI-powered successor to [Playwright](https://playwright.dev), offering three simple APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) that provide the building blocks for web automation via natural language.\nThe goal of Stagehand is to provide a lightweight model-agnostic framework, without overly complex abstractions. It‚Äôs not going to order you a pizza, but it will help you execute steps like\n```\n\"click the order button\"\n```\n.\nEach Stagehand function takes in an atomic instruction, such as\n```\nact(\"click the login button\")\n```\n or\n```\nextract(\"find the price of pad thai\")\n```\n, generates the appropriate Playwright code to accomplish that instruction, and executes it.\n###\n[‚Äã](#what-is-a-web-agent%3F)\nWhat is a web agent?\nA web agent is an AI agent that aims to browse the web like a human. They can navigate the web, interact with web pages, and perform tasks. You could imagine something like telling a bot ‚Äúhere‚Äôs my credit card, order me pad thai‚Äù and having it do that entirely autonomously.\n###\n[‚Äã](#is-stagehand-a-web-agent%3F)\nIs Stagehand a web agent?\nNo, Stagehand is not a web agent. It is a set of tools that enables and empowers web agents and developers building them. A web agent could take an instruction like ‚Äúorder me pad thai‚Äù and use Stagehand to navigate to the restaurant‚Äôs website, find the menu, and order the food.\n###\n[‚Äã](#what-are-some-best-practices-for-using-stagehand%3F)\nWhat are some best practices for using Stagehand?\nStagehand is something like Github Copilot, but for web automation. It‚Äôs not a good idea to ask it to write your entire application, but it‚Äôs great for quickly generating self-healing Playwright code to accomplish specific tasks.\nTherefore, instructions should be atomic to increase reliability, and step planning should be handled by the higher level agent. You can use\n```\nobserve()\n```\n to get a suggested list of actions that can be taken on the current page, and then use those to ground your step planning prompts.\n###\n[‚Äã](#who-built-stagehand%3F)\nWho built Stagehand?\nStagehand is open source and maintained by the [Browserbase](https://browserbase.com) team. We envision a world in which web agents are built with Stagehand on Browserbase.\nWe believe that by enabling more developers to build reliable web automations, we‚Äôll expand the market of developers who benefit from our headless browser infrastructure. This is the framework that we wished we had while tinkering on our own applications, and we‚Äôre excited to share it with you.\nIf you‚Äôve made it this far, hi mom!\n[Quickstart](/get_started/quickstart)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction#lights%2C-camera%2C-act",
        "https://docs.stagehand.dev/get_started/quickstart",
        "https://docs.stagehand.dev/get_started/walkthrough",
        "https://docs.stagehand.dev/get_started/introduction#faq",
        "https://docs.stagehand.dev/get_started/introduction#what-is-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-is-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#is-stagehand-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-are-some-best-practices-for-using-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#who-built-stagehand%3F"
      ],
      "codeExamples": [
        {
          "code": "\"click the order button\"",
          "language": "",
          "description": ""
        },
        {
          "code": "act(\"click the login button\")",
          "language": "",
          "description": ""
        },
        {
          "code": "extract(\"find the price of pad thai\")",
          "language": "",
          "description": ""
        }
      ],
      "apiSignatures": [
        {
          "name": "‚ÄãLights, Camera, act()",
          "signature": "‚ÄãLights, Camera, act()",
          "description": "Let‚Äôs get you started with Stagehand."
        }
      ],
      "tokenCount": 936,
      "isApiDoc": true,
      "hasBeenSummarized": false
    },
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYvZ2V0X3N0YXJ0ZWQvaW50cm9kdWN0aW9uI3doby1idWlsdC1zdGFnZWhhbmQlM0Y": {
      "url": "https://docs.stagehand.dev/get_started/introduction#who-built-stagehand%3F",
      "title": "Introduction - ü§ò Stagehand",
      "markdownContent": "Introduction - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nIntroduction\nStagehand is the easiest way to build browser automations. It is completely interoperable with [Playwright](https://playwright.dev/) and has seamless integration with [Browserbase](https://browserbase.com).\nIt offers three simple AI APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) on top of the base Playwright\n```\nPage\n```\n class that provide the building blocks for web automation via natural language.\nAnything that can be done in a browser can be done with Stagehand. Think about stuff like:\n1.  Log into Amazon, search for AirPods, and buy the most relevant product\n2.  Go to Hacker News and extract the top stories of the day\n3.  Go to Doordash, find the cheapest pad thai, and order it to your house\nThese automations can be built with Playwright, but it can be very cumbersome to write the code, and it will be very vulnerable to minor changes in the UI.\nStagehand‚Äôs AI, especially when combined with Browserbase‚Äôs stealth mode, make it easy to write durable code and bypass bot detection and captchas.\n##\n[‚Äã](#lights%2C-camera%2C-act)\nLights, Camera,\n```\nact()\n```\nLet‚Äôs get you started with Stagehand.\n[\n## Quickstart\nBuild browser automations in no time.\n](/get_started/quickstart)[\n## How Stagehand Works\nGo behind the scenes with Stagehand.\n](/get_started/walkthrough)\n##\n[‚Äã](#faq)\nFAQ\n###\n[‚Äã](#what-is-stagehand%3F)\nWhat is Stagehand?\nStagehand is the AI-powered successor to [Playwright](https://playwright.dev), offering three simple APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) that provide the building blocks for web automation via natural language.\nThe goal of Stagehand is to provide a lightweight model-agnostic framework, without overly complex abstractions. It‚Äôs not going to order you a pizza, but it will help you execute steps like\n```\n\"click the order button\"\n```\n.\nEach Stagehand function takes in an atomic instruction, such as\n```\nact(\"click the login button\")\n```\n or\n```\nextract(\"find the price of pad thai\")\n```\n, generates the appropriate Playwright code to accomplish that instruction, and executes it.\n###\n[‚Äã](#what-is-a-web-agent%3F)\nWhat is a web agent?\nA web agent is an AI agent that aims to browse the web like a human. They can navigate the web, interact with web pages, and perform tasks. You could imagine something like telling a bot ‚Äúhere‚Äôs my credit card, order me pad thai‚Äù and having it do that entirely autonomously.\n###\n[‚Äã](#is-stagehand-a-web-agent%3F)\nIs Stagehand a web agent?\nNo, Stagehand is not a web agent. It is a set of tools that enables and empowers web agents and developers building them. A web agent could take an instruction like ‚Äúorder me pad thai‚Äù and use Stagehand to navigate to the restaurant‚Äôs website, find the menu, and order the food.\n###\n[‚Äã](#what-are-some-best-practices-for-using-stagehand%3F)\nWhat are some best practices for using Stagehand?\nStagehand is something like Github Copilot, but for web automation. It‚Äôs not a good idea to ask it to write your entire application, but it‚Äôs great for quickly generating self-healing Playwright code to accomplish specific tasks.\nTherefore, instructions should be atomic to increase reliability, and step planning should be handled by the higher level agent. You can use\n```\nobserve()\n```\n to get a suggested list of actions that can be taken on the current page, and then use those to ground your step planning prompts.\n###\n[‚Äã](#who-built-stagehand%3F)\nWho built Stagehand?\nStagehand is open source and maintained by the [Browserbase](https://browserbase.com) team. We envision a world in which web agents are built with Stagehand on Browserbase.\nWe believe that by enabling more developers to build reliable web automations, we‚Äôll expand the market of developers who benefit from our headless browser infrastructure. This is the framework that we wished we had while tinkering on our own applications, and we‚Äôre excited to share it with you.\nIf you‚Äôve made it this far, hi mom!\n[Quickstart](/get_started/quickstart)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction#lights%2C-camera%2C-act",
        "https://docs.stagehand.dev/get_started/quickstart",
        "https://docs.stagehand.dev/get_started/walkthrough",
        "https://docs.stagehand.dev/get_started/introduction#faq",
        "https://docs.stagehand.dev/get_started/introduction#what-is-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-is-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#is-stagehand-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-are-some-best-practices-for-using-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#who-built-stagehand%3F"
      ],
      "codeExamples": [
        {
          "code": "\"click the order button\"",
          "language": "",
          "description": ""
        },
        {
          "code": "act(\"click the login button\")",
          "language": "",
          "description": ""
        },
        {
          "code": "extract(\"find the price of pad thai\")",
          "language": "",
          "description": ""
        }
      ],
      "apiSignatures": [
        {
          "name": "‚ÄãLights, Camera, act()",
          "signature": "‚ÄãLights, Camera, act()",
          "description": "Let‚Äôs get you started with Stagehand."
        }
      ],
      "tokenCount": 936,
      "isApiDoc": true,
      "hasBeenSummarized": false
    },
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYvZ2V0X3N0YXJ0ZWQvaW50cm9kdWN0aW9uI2hvdy1pdC13b3Jrcw": {
      "url": "https://docs.stagehand.dev/get_started/introduction#how-it-works",
      "title": "Introduction - ü§ò Stagehand",
      "markdownContent": "Introduction - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nIntroduction\nStagehand is the easiest way to build browser automations. It is completely interoperable with [Playwright](https://playwright.dev/) and has seamless integration with [Browserbase](https://browserbase.com).\nIt offers three simple AI APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) on top of the base Playwright\n```\nPage\n```\n class that provide the building blocks for web automation via natural language.\nAnything that can be done in a browser can be done with Stagehand. Think about stuff like:\n1.  Log into Amazon, search for AirPods, and buy the most relevant product\n2.  Go to Hacker News and extract the top stories of the day\n3.  Go to Doordash, find the cheapest pad thai, and order it to your house\nThese automations can be built with Playwright, but it can be very cumbersome to write the code, and it will be very vulnerable to minor changes in the UI.\nStagehand‚Äôs AI, especially when combined with Browserbase‚Äôs stealth mode, make it easy to write durable code and bypass bot detection and captchas.\n##\n[‚Äã](#lights%2C-camera%2C-act)\nLights, Camera,\n```\nact()\n```\nLet‚Äôs get you started with Stagehand.\n[\n## Quickstart\nBuild browser automations in no time.\n](/get_started/quickstart)[\n## How Stagehand Works\nGo behind the scenes with Stagehand.\n](/get_started/walkthrough)\n##\n[‚Äã](#faq)\nFAQ\n###\n[‚Äã](#what-is-stagehand%3F)\nWhat is Stagehand?\nStagehand is the AI-powered successor to [Playwright](https://playwright.dev), offering three simple APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) that provide the building blocks for web automation via natural language.\nThe goal of Stagehand is to provide a lightweight model-agnostic framework, without overly complex abstractions. It‚Äôs not going to order you a pizza, but it will help you execute steps like\n```\n\"click the order button\"\n```\n.\nEach Stagehand function takes in an atomic instruction, such as\n```\nact(\"click the login button\")\n```\n or\n```\nextract(\"find the price of pad thai\")\n```\n, generates the appropriate Playwright code to accomplish that instruction, and executes it.\n###\n[‚Äã](#what-is-a-web-agent%3F)\nWhat is a web agent?\nA web agent is an AI agent that aims to browse the web like a human. They can navigate the web, interact with web pages, and perform tasks. You could imagine something like telling a bot ‚Äúhere‚Äôs my credit card, order me pad thai‚Äù and having it do that entirely autonomously.\n###\n[‚Äã](#is-stagehand-a-web-agent%3F)\nIs Stagehand a web agent?\nNo, Stagehand is not a web agent. It is a set of tools that enables and empowers web agents and developers building them. A web agent could take an instruction like ‚Äúorder me pad thai‚Äù and use Stagehand to navigate to the restaurant‚Äôs website, find the menu, and order the food.\n###\n[‚Äã](#what-are-some-best-practices-for-using-stagehand%3F)\nWhat are some best practices for using Stagehand?\nStagehand is something like Github Copilot, but for web automation. It‚Äôs not a good idea to ask it to write your entire application, but it‚Äôs great for quickly generating self-healing Playwright code to accomplish specific tasks.\nTherefore, instructions should be atomic to increase reliability, and step planning should be handled by the higher level agent. You can use\n```\nobserve()\n```\n to get a suggested list of actions that can be taken on the current page, and then use those to ground your step planning prompts.\n###\n[‚Äã](#who-built-stagehand%3F)\nWho built Stagehand?\nStagehand is open source and maintained by the [Browserbase](https://browserbase.com) team. We envision a world in which web agents are built with Stagehand on Browserbase.\nWe believe that by enabling more developers to build reliable web automations, we‚Äôll expand the market of developers who benefit from our headless browser infrastructure. This is the framework that we wished we had while tinkering on our own applications, and we‚Äôre excited to share it with you.\nIf you‚Äôve made it this far, hi mom!\n[Quickstart](/get_started/quickstart)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction#lights%2C-camera%2C-act",
        "https://docs.stagehand.dev/get_started/quickstart",
        "https://docs.stagehand.dev/get_started/walkthrough",
        "https://docs.stagehand.dev/get_started/introduction#faq",
        "https://docs.stagehand.dev/get_started/introduction#what-is-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-is-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#is-stagehand-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-are-some-best-practices-for-using-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#who-built-stagehand%3F"
      ],
      "codeExamples": [
        {
          "code": "\"click the order button\"",
          "language": "",
          "description": ""
        },
        {
          "code": "act(\"click the login button\")",
          "language": "",
          "description": ""
        },
        {
          "code": "extract(\"find the price of pad thai\")",
          "language": "",
          "description": ""
        }
      ],
      "apiSignatures": [
        {
          "name": "‚ÄãLights, Camera, act()",
          "signature": "‚ÄãLights, Camera, act()",
          "description": "Let‚Äôs get you started with Stagehand."
        }
      ],
      "tokenCount": 936,
      "isApiDoc": true,
      "hasBeenSummarized": false
    },
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYvZ2V0X3N0YXJ0ZWQvYmVzdF9wcmFjdGljZXM": {
      "url": "https://docs.stagehand.dev/get_started/best_practices",
      "title": "Best Practices - ü§ò Stagehand",
      "markdownContent": "Best Practices - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nBest Practices\n##\n[‚Äã](#prompting-tips)\nPrompting Tips\nPrompting Stagehand is more literal and atomic than other higher level frameworks, including agentic frameworks. Here are some guidelines to help you craft effective prompts:\n###\n[‚Äã](#do)\nDo\n**Use\n```\nact()\n```\n as a fallback when Playwright fails**\n```javascript\n```javascript\ntry{// Wait for search button and click itconst quickStartSelector =`#content-area > div.relative.mt-8.prose.prose-gray.dark\\:prose-invert > div > a:nth-child(1)`;await page.waitForSelector(quickStartSelector);await page.locator(quickStartSelector).click();await page.waitForLoadState(\"networkidle\");}catch{// Use Stagehand as a fallback to get the job doneconsole.log(\"Error occurred, falling back to Stagehand\");await page.act({action:\"Click the link to the quickstart\",});}\n```\n```\n**Use specific and concise actions**\n```javascript\n```javascript\nawait page.act({action:\"click the login button\"});const productInfo =await page.extract({instruction:\"find the red shoes\",schema: z.object({productName: z.string(),price: z.number(),}),});\n```\n```\n**Break down complex tasks into smaller, atomic steps**\nInstead of combining actions:\n```javascript\n```javascript\n// Avoid thisawait page.act({action:\"log in and purchase the first item\"});\n```\n```\nSplit them into individual steps:\n```javascript\n```javascript\nawait page.act({action:\"click the login button\"});// ...additional steps to log in...await page.act({action:\"click on the first item\"});await page.act({action:\"click the purchase button\"});\n```\n```\n**Use\n```\nobserve()\n```\n to get actionable suggestions from the current page**\n```javascript\n```javascript\nconst actions =await page.observe();console.log(\"Possible actions:\", actions);// You can also use `observe()` with a custom promptconst buttons =await page.observe({instruction:\"find all the buttons on the page\",});\n```\n```\n###\n[‚Äã](#don%E2%80%99t)\nDon‚Äôt\n**Use broad or ambiguous instructions**\n```javascript\n```javascript\n// Too vagueawait page.act({action:\"find something interesting on the page\"});\n```\n```\n**Combine multiple actions into one instruction**\n```javascript\n```javascript\n// Avoid combining actionsawait page.act({action:\"fill out the form and submit it\"});\n```\n```\n**Expect Stagehand to perform high-level planning or reasoning**\n```javascript\n```javascript\n// Outside Stagehand's scopeawait page.act({action:\"book the cheapest flight available\"});\n```\n```\nBy following these guidelines, you‚Äôll increase the reliability and effectiveness of your web automations with Stagehand. Remember, Stagehand excels at executing precise, well-defined actions so keeping your instructions atomic will lead to the best outcomes.\nWe leave the agentic behavior to higher-level agentic systems which can use Stagehand as a tool.\n[Quickstart](/get_started/quickstart)[How Stagehand Works](/get_started/walkthrough)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction#prompting-tips",
        "https://docs.stagehand.dev/get_started/introduction#do",
        "https://docs.stagehand.dev/get_started/introduction#don%E2%80%99t",
        "https://docs.stagehand.dev/get_started/quickstart",
        "https://docs.stagehand.dev/get_started/walkthrough"
      ],
      "codeExamples": [
        {
          "code": "try{// Wait for search button and click itconst quickStartSelector =`#content-area > div.relative.mt-8.prose.prose-gray.dark\\:prose-invert > div > a:nth-child(1)`;await page.waitForSelector(quickStartSelector);await page.locator(quickStartSelector).click();await page.waitForLoadState(\"networkidle\");}catch{// Use Stagehand as a fallback to get the job doneconsole.log(\"Error occurred, falling back to Stagehand\");await page.act({action:\"Click the link to the quickstart\",});}",
          "language": "",
          "description": "Use act() as a fallback when Playwright fails"
        },
        {
          "code": "try{// Wait for search button and click itconst quickStartSelector =`#content-area > div.relative.mt-8.prose.prose-gray.dark\\:prose-invert > div > a:nth-child(1)`;await page.waitForSelector(quickStartSelector);await page.locator(quickStartSelector).click();await page.waitForLoadState(\"networkidle\");}catch{// Use Stagehand as a fallback to get the job doneconsole.log(\"Error occurred, falling back to Stagehand\");await page.act({action:\"Click the link to the quickstart\",});}",
          "language": "",
          "description": ""
        },
        {
          "code": "try{// Wait for search button and click itconst quickStartSelector =`#content-area > div.relative.mt-8.prose.prose-gray.dark\\:prose-invert > div > a:nth-child(1)`;await page.waitForSelector(quickStartSelector);await page.locator(quickStartSelector).click();await page.waitForLoadState(\"networkidle\");}catch{// Use Stagehand as a fallback to get the job doneconsole.log(\"Error occurred, falling back to Stagehand\");await page.act({action:\"Click the link to the quickstart\",});}",
          "language": "javascript",
          "description": ""
        },
        {
          "code": "try{// Wait for search button and click itconst quickStartSelector =`#content-area > div.relative.mt-8.prose.prose-gray.dark\\:prose-invert > div > a:nth-child(1)`;await page.waitForSelector(quickStartSelector);await page.locator(quickStartSelector).click();await page.waitForLoadState(\"networkidle\");}catch{// Use Stagehand as a fallback to get the job doneconsole.log(\"Error occurred, falling back to Stagehand\");await page.act({action:\"Click the link to the quickstart\",});}",
          "language": "javascript",
          "description": ""
        },
        {
          "code": "await page.act({action:\"click the login button\"});const productInfo =await page.extract({instruction:\"find the red shoes\",schema: z.object({productName: z.string(),price: z.number(),}),});",
          "language": "",
          "description": "Use specific and concise actions"
        },
        {
          "code": "await page.act({action:\"click the login button\"});const productInfo =await page.extract({instruction:\"find the red shoes\",schema: z.object({productName: z.string(),price: z.number(),}),});",
          "language": "",
          "description": ""
        },
        {
          "code": "await page.act({action:\"click the login button\"});const productInfo =await page.extract({instruction:\"find the red shoes\",schema: z.object({productName: z.string(),price: z.number(),}),});",
          "language": "javascript",
          "description": ""
        },
        {
          "code": "await page.act({action:\"click the login button\"});const productInfo =await page.extract({instruction:\"find the red shoes\",schema: z.object({productName: z.string(),price: z.number(),}),});",
          "language": "javascript",
          "description": ""
        },
        {
          "code": "// Avoid thisawait page.act({action:\"log in and purchase the first item\"});",
          "language": "",
          "description": "Instead of combining actions:"
        },
        {
          "code": "// Avoid thisawait page.act({action:\"log in and purchase the first item\"});",
          "language": "",
          "description": ""
        },
        {
          "code": "// Avoid thisawait page.act({action:\"log in and purchase the first item\"});",
          "language": "javascript",
          "description": ""
        },
        {
          "code": "// Avoid thisawait page.act({action:\"log in and purchase the first item\"});",
          "language": "javascript",
          "description": ""
        },
        {
          "code": "await page.act({action:\"click the login button\"});// ...additional steps to log in...await page.act({action:\"click on the first item\"});await page.act({action:\"click the purchase button\"});",
          "language": "",
          "description": "Split them into individual steps:"
        },
        {
          "code": "await page.act({action:\"click the login button\"});// ...additional steps to log in...await page.act({action:\"click on the first item\"});await page.act({action:\"click the purchase button\"});",
          "language": "",
          "description": ""
        },
        {
          "code": "await page.act({action:\"click the login button\"});// ...additional steps to log in...await page.act({action:\"click on the first item\"});await page.act({action:\"click the purchase button\"});",
          "language": "javascript",
          "description": ""
        },
        {
          "code": "await page.act({action:\"click the login button\"});// ...additional steps to log in...await page.act({action:\"click on the first item\"});await page.act({action:\"click the purchase button\"});",
          "language": "javascript",
          "description": ""
        },
        {
          "code": "const actions =await page.observe();console.log(\"Possible actions:\", actions);// You can also use `observe()` with a custom promptconst buttons =await page.observe({instruction:\"find all the buttons on the page\",});",
          "language": "",
          "description": "Use observe() to get actionable suggestions from the current page"
        },
        {
          "code": "const actions =await page.observe();console.log(\"Possible actions:\", actions);// You can also use `observe()` with a custom promptconst buttons =await page.observe({instruction:\"find all the buttons on the page\",});",
          "language": "",
          "description": ""
        },
        {
          "code": "const actions =await page.observe();console.log(\"Possible actions:\", actions);// You can also use `observe()` with a custom promptconst buttons =await page.observe({instruction:\"find all the buttons on the page\",});",
          "language": "javascript",
          "description": ""
        },
        {
          "code": "const actions =await page.observe();console.log(\"Possible actions:\", actions);// You can also use `observe()` with a custom promptconst buttons =await page.observe({instruction:\"find all the buttons on the page\",});",
          "language": "javascript",
          "description": ""
        },
        {
          "code": "// Too vagueawait page.act({action:\"find something interesting on the page\"});",
          "language": "",
          "description": "Use broad or ambiguous instructions"
        },
        {
          "code": "// Too vagueawait page.act({action:\"find something interesting on the page\"});",
          "language": "",
          "description": ""
        },
        {
          "code": "// Too vagueawait page.act({action:\"find something interesting on the page\"});",
          "language": "javascript",
          "description": ""
        },
        {
          "code": "// Too vagueawait page.act({action:\"find something interesting on the page\"});",
          "language": "javascript",
          "description": ""
        },
        {
          "code": "// Avoid combining actionsawait page.act({action:\"fill out the form and submit it\"});",
          "language": "",
          "description": "Combine multiple actions into one instruction"
        },
        {
          "code": "// Avoid combining actionsawait page.act({action:\"fill out the form and submit it\"});",
          "language": "",
          "description": ""
        },
        {
          "code": "// Avoid combining actionsawait page.act({action:\"fill out the form and submit it\"});",
          "language": "javascript",
          "description": ""
        },
        {
          "code": "// Avoid combining actionsawait page.act({action:\"fill out the form and submit it\"});",
          "language": "javascript",
          "description": ""
        },
        {
          "code": "// Outside Stagehand's scopeawait page.act({action:\"book the cheapest flight available\"});",
          "language": "",
          "description": "Expect Stagehand to perform high-level planning or reasoning"
        },
        {
          "code": "// Outside Stagehand's scopeawait page.act({action:\"book the cheapest flight available\"});",
          "language": "",
          "description": ""
        },
        {
          "code": "// Outside Stagehand's scopeawait page.act({action:\"book the cheapest flight available\"});",
          "language": "javascript",
          "description": ""
        },
        {
          "code": "// Outside Stagehand's scopeawait page.act({action:\"book the cheapest flight available\"});",
          "language": "javascript",
          "description": ""
        }
      ],
      "apiSignatures": [],
      "tokenCount": 595,
      "isApiDoc": false,
      "hasBeenSummarized": false
    },
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYvZ2V0X3N0YXJ0ZWQvaW50cm9kdWN0aW9uI2RvbS1wcm9jZXNzaW5n": {
      "url": "https://docs.stagehand.dev/get_started/introduction#dom-processing",
      "title": "Introduction - ü§ò Stagehand",
      "markdownContent": "Introduction - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nIntroduction\nStagehand is the easiest way to build browser automations. It is completely interoperable with [Playwright](https://playwright.dev/) and has seamless integration with [Browserbase](https://browserbase.com).\nIt offers three simple AI APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) on top of the base Playwright\n```\nPage\n```\n class that provide the building blocks for web automation via natural language.\nAnything that can be done in a browser can be done with Stagehand. Think about stuff like:\n1.  Log into Amazon, search for AirPods, and buy the most relevant product\n2.  Go to Hacker News and extract the top stories of the day\n3.  Go to Doordash, find the cheapest pad thai, and order it to your house\nThese automations can be built with Playwright, but it can be very cumbersome to write the code, and it will be very vulnerable to minor changes in the UI.\nStagehand‚Äôs AI, especially when combined with Browserbase‚Äôs stealth mode, make it easy to write durable code and bypass bot detection and captchas.\n##\n[‚Äã](#lights%2C-camera%2C-act)\nLights, Camera,\n```\nact()\n```\nLet‚Äôs get you started with Stagehand.\n[\n## Quickstart\nBuild browser automations in no time.\n](/get_started/quickstart)[\n## How Stagehand Works\nGo behind the scenes with Stagehand.\n](/get_started/walkthrough)\n##\n[‚Äã](#faq)\nFAQ\n###\n[‚Äã](#what-is-stagehand%3F)\nWhat is Stagehand?\nStagehand is the AI-powered successor to [Playwright](https://playwright.dev), offering three simple APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) that provide the building blocks for web automation via natural language.\nThe goal of Stagehand is to provide a lightweight model-agnostic framework, without overly complex abstractions. It‚Äôs not going to order you a pizza, but it will help you execute steps like\n```\n\"click the order button\"\n```\n.\nEach Stagehand function takes in an atomic instruction, such as\n```\nact(\"click the login button\")\n```\n or\n```\nextract(\"find the price of pad thai\")\n```\n, generates the appropriate Playwright code to accomplish that instruction, and executes it.\n###\n[‚Äã](#what-is-a-web-agent%3F)\nWhat is a web agent?\nA web agent is an AI agent that aims to browse the web like a human. They can navigate the web, interact with web pages, and perform tasks. You could imagine something like telling a bot ‚Äúhere‚Äôs my credit card, order me pad thai‚Äù and having it do that entirely autonomously.\n###\n[‚Äã](#is-stagehand-a-web-agent%3F)\nIs Stagehand a web agent?\nNo, Stagehand is not a web agent. It is a set of tools that enables and empowers web agents and developers building them. A web agent could take an instruction like ‚Äúorder me pad thai‚Äù and use Stagehand to navigate to the restaurant‚Äôs website, find the menu, and order the food.\n###\n[‚Äã](#what-are-some-best-practices-for-using-stagehand%3F)\nWhat are some best practices for using Stagehand?\nStagehand is something like Github Copilot, but for web automation. It‚Äôs not a good idea to ask it to write your entire application, but it‚Äôs great for quickly generating self-healing Playwright code to accomplish specific tasks.\nTherefore, instructions should be atomic to increase reliability, and step planning should be handled by the higher level agent. You can use\n```\nobserve()\n```\n to get a suggested list of actions that can be taken on the current page, and then use those to ground your step planning prompts.\n###\n[‚Äã](#who-built-stagehand%3F)\nWho built Stagehand?\nStagehand is open source and maintained by the [Browserbase](https://browserbase.com) team. We envision a world in which web agents are built with Stagehand on Browserbase.\nWe believe that by enabling more developers to build reliable web automations, we‚Äôll expand the market of developers who benefit from our headless browser infrastructure. This is the framework that we wished we had while tinkering on our own applications, and we‚Äôre excited to share it with you.\nIf you‚Äôve made it this far, hi mom!\n[Quickstart](/get_started/quickstart)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction#lights%2C-camera%2C-act",
        "https://docs.stagehand.dev/get_started/quickstart",
        "https://docs.stagehand.dev/get_started/walkthrough",
        "https://docs.stagehand.dev/get_started/introduction#faq",
        "https://docs.stagehand.dev/get_started/introduction#what-is-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-is-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#is-stagehand-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-are-some-best-practices-for-using-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#who-built-stagehand%3F"
      ],
      "codeExamples": [
        {
          "code": "\"click the order button\"",
          "language": "",
          "description": ""
        },
        {
          "code": "act(\"click the login button\")",
          "language": "",
          "description": ""
        },
        {
          "code": "extract(\"find the price of pad thai\")",
          "language": "",
          "description": ""
        }
      ],
      "apiSignatures": [
        {
          "name": "‚ÄãLights, Camera, act()",
          "signature": "‚ÄãLights, Camera, act()",
          "description": "Let‚Äôs get you started with Stagehand."
        }
      ],
      "tokenCount": 936,
      "isApiDoc": true,
      "hasBeenSummarized": false
    },
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYvZ2V0X3N0YXJ0ZWQvaW50cm9kdWN0aW9uI3Zpc2lvbg": {
      "url": "https://docs.stagehand.dev/get_started/introduction#vision",
      "title": "Introduction - ü§ò Stagehand",
      "markdownContent": "Introduction - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nIntroduction\nStagehand is the easiest way to build browser automations. It is completely interoperable with [Playwright](https://playwright.dev/) and has seamless integration with [Browserbase](https://browserbase.com).\nIt offers three simple AI APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) on top of the base Playwright\n```\nPage\n```\n class that provide the building blocks for web automation via natural language.\nAnything that can be done in a browser can be done with Stagehand. Think about stuff like:\n1.  Log into Amazon, search for AirPods, and buy the most relevant product\n2.  Go to Hacker News and extract the top stories of the day\n3.  Go to Doordash, find the cheapest pad thai, and order it to your house\nThese automations can be built with Playwright, but it can be very cumbersome to write the code, and it will be very vulnerable to minor changes in the UI.\nStagehand‚Äôs AI, especially when combined with Browserbase‚Äôs stealth mode, make it easy to write durable code and bypass bot detection and captchas.\n##\n[‚Äã](#lights%2C-camera%2C-act)\nLights, Camera,\n```\nact()\n```\nLet‚Äôs get you started with Stagehand.\n[\n## Quickstart\nBuild browser automations in no time.\n](/get_started/quickstart)[\n## How Stagehand Works\nGo behind the scenes with Stagehand.\n](/get_started/walkthrough)\n##\n[‚Äã](#faq)\nFAQ\n###\n[‚Äã](#what-is-stagehand%3F)\nWhat is Stagehand?\nStagehand is the AI-powered successor to [Playwright](https://playwright.dev), offering three simple APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) that provide the building blocks for web automation via natural language.\nThe goal of Stagehand is to provide a lightweight model-agnostic framework, without overly complex abstractions. It‚Äôs not going to order you a pizza, but it will help you execute steps like\n```\n\"click the order button\"\n```\n.\nEach Stagehand function takes in an atomic instruction, such as\n```\nact(\"click the login button\")\n```\n or\n```\nextract(\"find the price of pad thai\")\n```\n, generates the appropriate Playwright code to accomplish that instruction, and executes it.\n###\n[‚Äã](#what-is-a-web-agent%3F)\nWhat is a web agent?\nA web agent is an AI agent that aims to browse the web like a human. They can navigate the web, interact with web pages, and perform tasks. You could imagine something like telling a bot ‚Äúhere‚Äôs my credit card, order me pad thai‚Äù and having it do that entirely autonomously.\n###\n[‚Äã](#is-stagehand-a-web-agent%3F)\nIs Stagehand a web agent?\nNo, Stagehand is not a web agent. It is a set of tools that enables and empowers web agents and developers building them. A web agent could take an instruction like ‚Äúorder me pad thai‚Äù and use Stagehand to navigate to the restaurant‚Äôs website, find the menu, and order the food.\n###\n[‚Äã](#what-are-some-best-practices-for-using-stagehand%3F)\nWhat are some best practices for using Stagehand?\nStagehand is something like Github Copilot, but for web automation. It‚Äôs not a good idea to ask it to write your entire application, but it‚Äôs great for quickly generating self-healing Playwright code to accomplish specific tasks.\nTherefore, instructions should be atomic to increase reliability, and step planning should be handled by the higher level agent. You can use\n```\nobserve()\n```\n to get a suggested list of actions that can be taken on the current page, and then use those to ground your step planning prompts.\n###\n[‚Äã](#who-built-stagehand%3F)\nWho built Stagehand?\nStagehand is open source and maintained by the [Browserbase](https://browserbase.com) team. We envision a world in which web agents are built with Stagehand on Browserbase.\nWe believe that by enabling more developers to build reliable web automations, we‚Äôll expand the market of developers who benefit from our headless browser infrastructure. This is the framework that we wished we had while tinkering on our own applications, and we‚Äôre excited to share it with you.\nIf you‚Äôve made it this far, hi mom!\n[Quickstart](/get_started/quickstart)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction#lights%2C-camera%2C-act",
        "https://docs.stagehand.dev/get_started/quickstart",
        "https://docs.stagehand.dev/get_started/walkthrough",
        "https://docs.stagehand.dev/get_started/introduction#faq",
        "https://docs.stagehand.dev/get_started/introduction#what-is-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-is-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#is-stagehand-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-are-some-best-practices-for-using-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#who-built-stagehand%3F"
      ],
      "codeExamples": [
        {
          "code": "\"click the order button\"",
          "language": "",
          "description": ""
        },
        {
          "code": "act(\"click the login button\")",
          "language": "",
          "description": ""
        },
        {
          "code": "extract(\"find the price of pad thai\")",
          "language": "",
          "description": ""
        }
      ],
      "apiSignatures": [
        {
          "name": "‚ÄãLights, Camera, act()",
          "signature": "‚ÄãLights, Camera, act()",
          "description": "Let‚Äôs get you started with Stagehand."
        }
      ],
      "tokenCount": 936,
      "isApiDoc": true,
      "hasBeenSummarized": false
    },
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYvZ2V0X3N0YXJ0ZWQvaW50cm9kdWN0aW9uI2NodW5raW5n": {
      "url": "https://docs.stagehand.dev/get_started/introduction#chunking",
      "title": "Introduction - ü§ò Stagehand",
      "markdownContent": "Introduction - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nIntroduction\nStagehand is the easiest way to build browser automations. It is completely interoperable with [Playwright](https://playwright.dev/) and has seamless integration with [Browserbase](https://browserbase.com).\nIt offers three simple AI APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) on top of the base Playwright\n```\nPage\n```\n class that provide the building blocks for web automation via natural language.\nAnything that can be done in a browser can be done with Stagehand. Think about stuff like:\n1.  Log into Amazon, search for AirPods, and buy the most relevant product\n2.  Go to Hacker News and extract the top stories of the day\n3.  Go to Doordash, find the cheapest pad thai, and order it to your house\nThese automations can be built with Playwright, but it can be very cumbersome to write the code, and it will be very vulnerable to minor changes in the UI.\nStagehand‚Äôs AI, especially when combined with Browserbase‚Äôs stealth mode, make it easy to write durable code and bypass bot detection and captchas.\n##\n[‚Äã](#lights%2C-camera%2C-act)\nLights, Camera,\n```\nact()\n```\nLet‚Äôs get you started with Stagehand.\n[\n## Quickstart\nBuild browser automations in no time.\n](/get_started/quickstart)[\n## How Stagehand Works\nGo behind the scenes with Stagehand.\n](/get_started/walkthrough)\n##\n[‚Äã](#faq)\nFAQ\n###\n[‚Äã](#what-is-stagehand%3F)\nWhat is Stagehand?\nStagehand is the AI-powered successor to [Playwright](https://playwright.dev), offering three simple APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) that provide the building blocks for web automation via natural language.\nThe goal of Stagehand is to provide a lightweight model-agnostic framework, without overly complex abstractions. It‚Äôs not going to order you a pizza, but it will help you execute steps like\n```\n\"click the order button\"\n```\n.\nEach Stagehand function takes in an atomic instruction, such as\n```\nact(\"click the login button\")\n```\n or\n```\nextract(\"find the price of pad thai\")\n```\n, generates the appropriate Playwright code to accomplish that instruction, and executes it.\n###\n[‚Äã](#what-is-a-web-agent%3F)\nWhat is a web agent?\nA web agent is an AI agent that aims to browse the web like a human. They can navigate the web, interact with web pages, and perform tasks. You could imagine something like telling a bot ‚Äúhere‚Äôs my credit card, order me pad thai‚Äù and having it do that entirely autonomously.\n###\n[‚Äã](#is-stagehand-a-web-agent%3F)\nIs Stagehand a web agent?\nNo, Stagehand is not a web agent. It is a set of tools that enables and empowers web agents and developers building them. A web agent could take an instruction like ‚Äúorder me pad thai‚Äù and use Stagehand to navigate to the restaurant‚Äôs website, find the menu, and order the food.\n###\n[‚Äã](#what-are-some-best-practices-for-using-stagehand%3F)\nWhat are some best practices for using Stagehand?\nStagehand is something like Github Copilot, but for web automation. It‚Äôs not a good idea to ask it to write your entire application, but it‚Äôs great for quickly generating self-healing Playwright code to accomplish specific tasks.\nTherefore, instructions should be atomic to increase reliability, and step planning should be handled by the higher level agent. You can use\n```\nobserve()\n```\n to get a suggested list of actions that can be taken on the current page, and then use those to ground your step planning prompts.\n###\n[‚Äã](#who-built-stagehand%3F)\nWho built Stagehand?\nStagehand is open source and maintained by the [Browserbase](https://browserbase.com) team. We envision a world in which web agents are built with Stagehand on Browserbase.\nWe believe that by enabling more developers to build reliable web automations, we‚Äôll expand the market of developers who benefit from our headless browser infrastructure. This is the framework that we wished we had while tinkering on our own applications, and we‚Äôre excited to share it with you.\nIf you‚Äôve made it this far, hi mom!\n[Quickstart](/get_started/quickstart)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction#lights%2C-camera%2C-act",
        "https://docs.stagehand.dev/get_started/quickstart",
        "https://docs.stagehand.dev/get_started/walkthrough",
        "https://docs.stagehand.dev/get_started/introduction#faq",
        "https://docs.stagehand.dev/get_started/introduction#what-is-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-is-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#is-stagehand-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-are-some-best-practices-for-using-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#who-built-stagehand%3F"
      ],
      "codeExamples": [
        {
          "code": "\"click the order button\"",
          "language": "",
          "description": ""
        },
        {
          "code": "act(\"click the login button\")",
          "language": "",
          "description": ""
        },
        {
          "code": "extract(\"find the price of pad thai\")",
          "language": "",
          "description": ""
        }
      ],
      "apiSignatures": [
        {
          "name": "‚ÄãLights, Camera, act()",
          "signature": "‚ÄãLights, Camera, act()",
          "description": "Let‚Äôs get you started with Stagehand."
        }
      ],
      "tokenCount": 936,
      "isApiDoc": true,
      "hasBeenSummarized": false
    },
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYvZ2V0X3N0YXJ0ZWQvaW50cm9kdWN0aW9uI2xsbS1hbmFseXNpcw": {
      "url": "https://docs.stagehand.dev/get_started/introduction#llm-analysis",
      "title": "Introduction - ü§ò Stagehand",
      "markdownContent": "Introduction - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nIntroduction\nStagehand is the easiest way to build browser automations. It is completely interoperable with [Playwright](https://playwright.dev/) and has seamless integration with [Browserbase](https://browserbase.com).\nIt offers three simple AI APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) on top of the base Playwright\n```\nPage\n```\n class that provide the building blocks for web automation via natural language.\nAnything that can be done in a browser can be done with Stagehand. Think about stuff like:\n1.  Log into Amazon, search for AirPods, and buy the most relevant product\n2.  Go to Hacker News and extract the top stories of the day\n3.  Go to Doordash, find the cheapest pad thai, and order it to your house\nThese automations can be built with Playwright, but it can be very cumbersome to write the code, and it will be very vulnerable to minor changes in the UI.\nStagehand‚Äôs AI, especially when combined with Browserbase‚Äôs stealth mode, make it easy to write durable code and bypass bot detection and captchas.\n##\n[‚Äã](#lights%2C-camera%2C-act)\nLights, Camera,\n```\nact()\n```\nLet‚Äôs get you started with Stagehand.\n[\n## Quickstart\nBuild browser automations in no time.\n](/get_started/quickstart)[\n## How Stagehand Works\nGo behind the scenes with Stagehand.\n](/get_started/walkthrough)\n##\n[‚Äã](#faq)\nFAQ\n###\n[‚Äã](#what-is-stagehand%3F)\nWhat is Stagehand?\nStagehand is the AI-powered successor to [Playwright](https://playwright.dev), offering three simple APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) that provide the building blocks for web automation via natural language.\nThe goal of Stagehand is to provide a lightweight model-agnostic framework, without overly complex abstractions. It‚Äôs not going to order you a pizza, but it will help you execute steps like\n```\n\"click the order button\"\n```\n.\nEach Stagehand function takes in an atomic instruction, such as\n```\nact(\"click the login button\")\n```\n or\n```\nextract(\"find the price of pad thai\")\n```\n, generates the appropriate Playwright code to accomplish that instruction, and executes it.\n###\n[‚Äã](#what-is-a-web-agent%3F)\nWhat is a web agent?\nA web agent is an AI agent that aims to browse the web like a human. They can navigate the web, interact with web pages, and perform tasks. You could imagine something like telling a bot ‚Äúhere‚Äôs my credit card, order me pad thai‚Äù and having it do that entirely autonomously.\n###\n[‚Äã](#is-stagehand-a-web-agent%3F)\nIs Stagehand a web agent?\nNo, Stagehand is not a web agent. It is a set of tools that enables and empowers web agents and developers building them. A web agent could take an instruction like ‚Äúorder me pad thai‚Äù and use Stagehand to navigate to the restaurant‚Äôs website, find the menu, and order the food.\n###\n[‚Äã](#what-are-some-best-practices-for-using-stagehand%3F)\nWhat are some best practices for using Stagehand?\nStagehand is something like Github Copilot, but for web automation. It‚Äôs not a good idea to ask it to write your entire application, but it‚Äôs great for quickly generating self-healing Playwright code to accomplish specific tasks.\nTherefore, instructions should be atomic to increase reliability, and step planning should be handled by the higher level agent. You can use\n```\nobserve()\n```\n to get a suggested list of actions that can be taken on the current page, and then use those to ground your step planning prompts.\n###\n[‚Äã](#who-built-stagehand%3F)\nWho built Stagehand?\nStagehand is open source and maintained by the [Browserbase](https://browserbase.com) team. We envision a world in which web agents are built with Stagehand on Browserbase.\nWe believe that by enabling more developers to build reliable web automations, we‚Äôll expand the market of developers who benefit from our headless browser infrastructure. This is the framework that we wished we had while tinkering on our own applications, and we‚Äôre excited to share it with you.\nIf you‚Äôve made it this far, hi mom!\n[Quickstart](/get_started/quickstart)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction#lights%2C-camera%2C-act",
        "https://docs.stagehand.dev/get_started/quickstart",
        "https://docs.stagehand.dev/get_started/walkthrough",
        "https://docs.stagehand.dev/get_started/introduction#faq",
        "https://docs.stagehand.dev/get_started/introduction#what-is-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-is-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#is-stagehand-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-are-some-best-practices-for-using-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#who-built-stagehand%3F"
      ],
      "codeExamples": [
        {
          "code": "\"click the order button\"",
          "language": "",
          "description": ""
        },
        {
          "code": "act(\"click the login button\")",
          "language": "",
          "description": ""
        },
        {
          "code": "extract(\"find the price of pad thai\")",
          "language": "",
          "description": ""
        }
      ],
      "apiSignatures": [
        {
          "name": "‚ÄãLights, Camera, act()",
          "signature": "‚ÄãLights, Camera, act()",
          "description": "Let‚Äôs get you started with Stagehand."
        }
      ],
      "tokenCount": 936,
      "isApiDoc": true,
      "hasBeenSummarized": false
    },
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYvY29udHJpYnV0aW9ucy9jb250cmlidXRpbmc": {
      "url": "https://docs.stagehand.dev/contributions/contributing",
      "title": "Contribute to Stagehand - ü§ò Stagehand",
      "markdownContent": "Contribute to Stagehand - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nContribute to Stagehand\n#\n[‚Äã](#codeowners-and-subject-matter-experts)\nCodeowners and Subject-Matter Experts\n**Stagehand repo codeowners are [Anirudh Kamath](https://github.com/kamath) and [Paul Klein](https://github.com/pkiv).** Any contribution must be explicitly approved by a codeowner.\nStagehand subject-matter experts are as follows:\n*   [**Sean McGuire**](https://github.com/seanmcguire12) - general repo, but especially evals and\n    ```\n    extract\n    ```\n*   [**Navid Pour**](https://github.com/navidkpr) - general repo, but especially\n    ```\n    act\n    ```\n*   [**Sameel Arif**](https://github.com/sameelarif) - general repo\n*   [**Filip Michalsky**](https://github.com/filip-michalsky) - general repo and integrations like Langchain or Claude MCP\n*   [**Miguel Gonzalez**](https://github.com/miguelg719) - general repo and accessibility tree (a11y tree) implementation\nSpecial thanks to [Jeremy Press](https://github.com/jeremypress) (the OG) and [all the contributors](https://github.com/browserbase/stagehand/graphs/contributors) for your help in making Stagehand the best browser automation framework.\n_**Please do not hesitate to reach out to anyone listed here in the [public Slack channel](https://join.slack.com/t/stagehand-dev/shared_invite/zt-2wknhxh47-VAed2iE8M8QSQTPpq2VK2Q)**_\n#\n[‚Äã](#before-you-start)\nBefore you start\n##\n[‚Äã](#general-workflow)\nGeneral Workflow\nGet listed as [one of our beloved contributors](https://github.com/browserbase/stagehand/graphs/contributors)!\n1.  **Discuss your proposed contribution before starting.** Not doing this runs you the risk of entirely discarding something you put considerable time and effort into. You can DM Anirudh on [Slack](https://join.slack.com/t/stagehand-dev/shared_invite/zt-2wknhxh47-VAed2iE8M8QSQTPpq2VK2Q) or [book 30 minutes](https://calendar.app.google/KaUhidUz32FUoz978) for a 1on1 call.\n2.  **Open a Pull Request.** Create a fork of this repository, and follow [GitHub‚Äôs instructions to create a Pull Request](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request-from-a-fork). This allows our team to review your contribution and leave comments.\n3.  **Wait for Review**. We‚Äôll do our best to get to your contribution as soon as possible. If it‚Äôs been 2-3 days and you have yet to receive any comments, DM Anirudh on [Slack](https://join.slack.com/t/stagehand-dev/shared_invite/zt-2wknhxh47-VAed2iE8M8QSQTPpq2VK2Q)\n4.  **Merge into\n    ```\n    evals\n    ```\n     branch.** We don‚Äôt let external contributors [run our CI via GitHub Actions](https://github.com/browserbase/stagehand/blob/main/.github/workflows/ci.yml) to prevent spam and misuse. If your contribution passes an initial screen, we‚Äôll run our evals on it\n    1.  By default, all PRs run the following tests that you can also run from the repo source:\n        1.  Lint (\n            ```\n            npm run lint\n            ```\n            ) - Runs\n            ```\n            prettier\n            ```\n             and\n            ```\n            eslint\n            ```\n            . If this fails, you can most likely run\n            ```\n            npm run format\n            ```\n             to fix some simple linting errors.\n        2.  Build (\n            ```\n            npm run build\n            ```\n            ) - Lints and builds TS ‚Üí JS in\n            ```\n            dist/\n            ```\n             via\n            ```\n            tsup\n            ```\n        3.  End-to-End (\n            ```\n            npm run e2e\n            ```\n            ) - These are deterministic end-to-end Playwright tests to ensure the integrity of basic Playwright functionality of [\n            ```\n            stagehand.page\n            ```\n            ](http://stagehand.page) and\n            ```\n            stagehand.context\n            ```\n             as well as compatibility with the Browserbase API\n        4.  Combination (\n            ```\n            npm run evals category combination\n            ```\n            ) - This runs AI-based end-to-end tests using combinations of\n            ```\n            act\n            ```\n            ,\n            ```\n            extract\n            ```\n            , and\n            ```\n            observe\n            ```\n    2.  If you‚Äôre changing anything about\n        ```\n        act\n        ```\n        ,\n        ```\n        extract\n        ```\n        , or\n        ```\n        observe\n        ```\n         itself, we might also run specific act/extract/observe evals to ensure existing functionality doesn‚Äôt significantly drop.\n5.  **Cleanup and merge to main**. Once it‚Äôs in\n    ```\n    evals\n    ```\n    , unfortunately the original contributor can‚Äôt make any further changes. The internal Stagehand team will be responsible for cleaning up the code and bringing it into main.\n##\n[‚Äã](#help-make-everyone%E2%80%99s-lives-easier)\nHelp make everyone‚Äôs lives easier\n1.  **Use draft PRs.** If your PR is a work in progress, please convert it to a draft (see below) while you‚Äôre working on it, and mark it for review/add reviewers when you‚Äôre ready. This helps us prevent clutter in the review queue.\n2.  **Provide a reproducible test plan.** Include an eval (preferred) or example. We can‚Äôt merge your PR if we can‚Äôt run anything that specifically highlights your contribution.\n    1.  Write a script in [\n        ```\n        evals/tasks\n        ```\n        ](https://github.com/browserbase/stagehand/tree/main/evals/tasks) as\n        ```\n        someTask.ts\n        ```\n    2.  Add your script to [\n        ```\n        evals.config.json\n        ```\n        ](https://github.com/browserbase/stagehand/blob/main/evals/evals.config.json) with default category\n        ```\n        combination\n        ```\n         (_or act/extract/observe if you‚Äôre__only__testing__act/extract/observe_).\n3.  **Add a changeset.** Run\n    ```\n    npx changeset\n    ```\n     to add a changeset that will directly reflect in the\n    ```\n    CHANGELOG\n    ```\n     in the upcoming release.\n    1.  ```\n        patch\n        ```\n         - no net new functionality to an end-user\n    2.  ```\n        minor\n        ```\n         - some net new functionality to an end-user (new function parameter, new exposed type, etc.)\n    3.  ```\n        major\n        ```\n         - you shouldn‚Äôt be committing a major change\n[How Stagehand Works](/get_started/walkthrough)[Examples and Guides](/get_started/guides)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction#codeowners-and-subject-matter-experts",
        "https://docs.stagehand.dev/get_started/introduction#before-you-start",
        "https://docs.stagehand.dev/get_started/introduction#general-workflow",
        "https://docs.stagehand.dev/get_started/introduction#help-make-everyone%E2%80%99s-lives-easier",
        "https://docs.stagehand.dev/get_started/walkthrough",
        "https://docs.stagehand.dev/get_started/guides"
      ],
      "codeExamples": [
        {
          "code": "npm run lint",
          "language": "",
          "description": ""
        },
        {
          "code": "npm run format",
          "language": "",
          "description": ""
        },
        {
          "code": "npm run build",
          "language": "",
          "description": ""
        },
        {
          "code": "npm run e2e",
          "language": "",
          "description": ""
        },
        {
          "code": "stagehand.page",
          "language": "",
          "description": ""
        },
        {
          "code": "stagehand.context",
          "language": "",
          "description": ""
        },
        {
          "code": "npm run evals category combination",
          "language": "",
          "description": ""
        },
        {
          "code": "evals/tasks",
          "language": "",
          "description": ""
        },
        {
          "code": "someTask.ts",
          "language": "",
          "description": ""
        },
        {
          "code": "evals.config.json",
          "language": "",
          "description": ""
        },
        {
          "code": "combination",
          "language": "",
          "description": ""
        },
        {
          "code": "npx changeset",
          "language": "",
          "description": ""
        }
      ],
      "apiSignatures": [],
      "tokenCount": 1296,
      "isApiDoc": false,
      "hasBeenSummarized": false
    },
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYvZ2V0X3N0YXJ0ZWQvaW50cm9kdWN0aW9uI3N0YWdlaGFuZC12cy1wbGF5d3JpZ2h0": {
      "url": "https://docs.stagehand.dev/get_started/introduction#stagehand-vs-playwright",
      "title": "Introduction - ü§ò Stagehand",
      "markdownContent": "Introduction - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nIntroduction\nStagehand is the easiest way to build browser automations. It is completely interoperable with [Playwright](https://playwright.dev/) and has seamless integration with [Browserbase](https://browserbase.com).\nIt offers three simple AI APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) on top of the base Playwright\n```\nPage\n```\n class that provide the building blocks for web automation via natural language.\nAnything that can be done in a browser can be done with Stagehand. Think about stuff like:\n1.  Log into Amazon, search for AirPods, and buy the most relevant product\n2.  Go to Hacker News and extract the top stories of the day\n3.  Go to Doordash, find the cheapest pad thai, and order it to your house\nThese automations can be built with Playwright, but it can be very cumbersome to write the code, and it will be very vulnerable to minor changes in the UI.\nStagehand‚Äôs AI, especially when combined with Browserbase‚Äôs stealth mode, make it easy to write durable code and bypass bot detection and captchas.\n##\n[‚Äã](#lights%2C-camera%2C-act)\nLights, Camera,\n```\nact()\n```\nLet‚Äôs get you started with Stagehand.\n[\n## Quickstart\nBuild browser automations in no time.\n](/get_started/quickstart)[\n## How Stagehand Works\nGo behind the scenes with Stagehand.\n](/get_started/walkthrough)\n##\n[‚Äã](#faq)\nFAQ\n###\n[‚Äã](#what-is-stagehand%3F)\nWhat is Stagehand?\nStagehand is the AI-powered successor to [Playwright](https://playwright.dev), offering three simple APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) that provide the building blocks for web automation via natural language.\nThe goal of Stagehand is to provide a lightweight model-agnostic framework, without overly complex abstractions. It‚Äôs not going to order you a pizza, but it will help you execute steps like\n```\n\"click the order button\"\n```\n.\nEach Stagehand function takes in an atomic instruction, such as\n```\nact(\"click the login button\")\n```\n or\n```\nextract(\"find the price of pad thai\")\n```\n, generates the appropriate Playwright code to accomplish that instruction, and executes it.\n###\n[‚Äã](#what-is-a-web-agent%3F)\nWhat is a web agent?\nA web agent is an AI agent that aims to browse the web like a human. They can navigate the web, interact with web pages, and perform tasks. You could imagine something like telling a bot ‚Äúhere‚Äôs my credit card, order me pad thai‚Äù and having it do that entirely autonomously.\n###\n[‚Äã](#is-stagehand-a-web-agent%3F)\nIs Stagehand a web agent?\nNo, Stagehand is not a web agent. It is a set of tools that enables and empowers web agents and developers building them. A web agent could take an instruction like ‚Äúorder me pad thai‚Äù and use Stagehand to navigate to the restaurant‚Äôs website, find the menu, and order the food.\n###\n[‚Äã](#what-are-some-best-practices-for-using-stagehand%3F)\nWhat are some best practices for using Stagehand?\nStagehand is something like Github Copilot, but for web automation. It‚Äôs not a good idea to ask it to write your entire application, but it‚Äôs great for quickly generating self-healing Playwright code to accomplish specific tasks.\nTherefore, instructions should be atomic to increase reliability, and step planning should be handled by the higher level agent. You can use\n```\nobserve()\n```\n to get a suggested list of actions that can be taken on the current page, and then use those to ground your step planning prompts.\n###\n[‚Äã](#who-built-stagehand%3F)\nWho built Stagehand?\nStagehand is open source and maintained by the [Browserbase](https://browserbase.com) team. We envision a world in which web agents are built with Stagehand on Browserbase.\nWe believe that by enabling more developers to build reliable web automations, we‚Äôll expand the market of developers who benefit from our headless browser infrastructure. This is the framework that we wished we had while tinkering on our own applications, and we‚Äôre excited to share it with you.\nIf you‚Äôve made it this far, hi mom!\n[Quickstart](/get_started/quickstart)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction#lights%2C-camera%2C-act",
        "https://docs.stagehand.dev/get_started/quickstart",
        "https://docs.stagehand.dev/get_started/walkthrough",
        "https://docs.stagehand.dev/get_started/introduction#faq",
        "https://docs.stagehand.dev/get_started/introduction#what-is-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-is-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#is-stagehand-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-are-some-best-practices-for-using-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#who-built-stagehand%3F"
      ],
      "codeExamples": [
        {
          "code": "\"click the order button\"",
          "language": "",
          "description": ""
        },
        {
          "code": "act(\"click the login button\")",
          "language": "",
          "description": ""
        },
        {
          "code": "extract(\"find the price of pad thai\")",
          "language": "",
          "description": ""
        }
      ],
      "apiSignatures": [
        {
          "name": "‚ÄãLights, Camera, act()",
          "signature": "‚ÄãLights, Camera, act()",
          "description": "Let‚Äôs get you started with Stagehand."
        }
      ],
      "tokenCount": 936,
      "isApiDoc": true,
      "hasBeenSummarized": false
    },
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYvZ2V0X3N0YXJ0ZWQvaW50cm9kdWN0aW9uI3Byb21wdGluZy10aXBz": {
      "url": "https://docs.stagehand.dev/get_started/introduction#prompting-tips",
      "title": "Introduction - ü§ò Stagehand",
      "markdownContent": "Introduction - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nIntroduction\nStagehand is the easiest way to build browser automations. It is completely interoperable with [Playwright](https://playwright.dev/) and has seamless integration with [Browserbase](https://browserbase.com).\nIt offers three simple AI APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) on top of the base Playwright\n```\nPage\n```\n class that provide the building blocks for web automation via natural language.\nAnything that can be done in a browser can be done with Stagehand. Think about stuff like:\n1.  Log into Amazon, search for AirPods, and buy the most relevant product\n2.  Go to Hacker News and extract the top stories of the day\n3.  Go to Doordash, find the cheapest pad thai, and order it to your house\nThese automations can be built with Playwright, but it can be very cumbersome to write the code, and it will be very vulnerable to minor changes in the UI.\nStagehand‚Äôs AI, especially when combined with Browserbase‚Äôs stealth mode, make it easy to write durable code and bypass bot detection and captchas.\n##\n[‚Äã](#lights%2C-camera%2C-act)\nLights, Camera,\n```\nact()\n```\nLet‚Äôs get you started with Stagehand.\n[\n## Quickstart\nBuild browser automations in no time.\n](/get_started/quickstart)[\n## How Stagehand Works\nGo behind the scenes with Stagehand.\n](/get_started/walkthrough)\n##\n[‚Äã](#faq)\nFAQ\n###\n[‚Äã](#what-is-stagehand%3F)\nWhat is Stagehand?\nStagehand is the AI-powered successor to [Playwright](https://playwright.dev), offering three simple APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) that provide the building blocks for web automation via natural language.\nThe goal of Stagehand is to provide a lightweight model-agnostic framework, without overly complex abstractions. It‚Äôs not going to order you a pizza, but it will help you execute steps like\n```\n\"click the order button\"\n```\n.\nEach Stagehand function takes in an atomic instruction, such as\n```\nact(\"click the login button\")\n```\n or\n```\nextract(\"find the price of pad thai\")\n```\n, generates the appropriate Playwright code to accomplish that instruction, and executes it.\n###\n[‚Äã](#what-is-a-web-agent%3F)\nWhat is a web agent?\nA web agent is an AI agent that aims to browse the web like a human. They can navigate the web, interact with web pages, and perform tasks. You could imagine something like telling a bot ‚Äúhere‚Äôs my credit card, order me pad thai‚Äù and having it do that entirely autonomously.\n###\n[‚Äã](#is-stagehand-a-web-agent%3F)\nIs Stagehand a web agent?\nNo, Stagehand is not a web agent. It is a set of tools that enables and empowers web agents and developers building them. A web agent could take an instruction like ‚Äúorder me pad thai‚Äù and use Stagehand to navigate to the restaurant‚Äôs website, find the menu, and order the food.\n###\n[‚Äã](#what-are-some-best-practices-for-using-stagehand%3F)\nWhat are some best practices for using Stagehand?\nStagehand is something like Github Copilot, but for web automation. It‚Äôs not a good idea to ask it to write your entire application, but it‚Äôs great for quickly generating self-healing Playwright code to accomplish specific tasks.\nTherefore, instructions should be atomic to increase reliability, and step planning should be handled by the higher level agent. You can use\n```\nobserve()\n```\n to get a suggested list of actions that can be taken on the current page, and then use those to ground your step planning prompts.\n###\n[‚Äã](#who-built-stagehand%3F)\nWho built Stagehand?\nStagehand is open source and maintained by the [Browserbase](https://browserbase.com) team. We envision a world in which web agents are built with Stagehand on Browserbase.\nWe believe that by enabling more developers to build reliable web automations, we‚Äôll expand the market of developers who benefit from our headless browser infrastructure. This is the framework that we wished we had while tinkering on our own applications, and we‚Äôre excited to share it with you.\nIf you‚Äôve made it this far, hi mom!\n[Quickstart](/get_started/quickstart)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction#lights%2C-camera%2C-act",
        "https://docs.stagehand.dev/get_started/quickstart",
        "https://docs.stagehand.dev/get_started/walkthrough",
        "https://docs.stagehand.dev/get_started/introduction#faq",
        "https://docs.stagehand.dev/get_started/introduction#what-is-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-is-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#is-stagehand-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-are-some-best-practices-for-using-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#who-built-stagehand%3F"
      ],
      "codeExamples": [
        {
          "code": "\"click the order button\"",
          "language": "",
          "description": ""
        },
        {
          "code": "act(\"click the login button\")",
          "language": "",
          "description": ""
        },
        {
          "code": "extract(\"find the price of pad thai\")",
          "language": "",
          "description": ""
        }
      ],
      "apiSignatures": [
        {
          "name": "‚ÄãLights, Camera, act()",
          "signature": "‚ÄãLights, Camera, act()",
          "description": "Let‚Äôs get you started with Stagehand."
        }
      ],
      "tokenCount": 936,
      "isApiDoc": true,
      "hasBeenSummarized": false
    },
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYvZ2V0X3N0YXJ0ZWQvaW50cm9kdWN0aW9uI2RvbiVFMiU4MCU5OXQ": {
      "url": "https://docs.stagehand.dev/get_started/introduction#don%E2%80%99t",
      "title": "Introduction - ü§ò Stagehand",
      "markdownContent": "Introduction - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nIntroduction\nStagehand is the easiest way to build browser automations. It is completely interoperable with [Playwright](https://playwright.dev/) and has seamless integration with [Browserbase](https://browserbase.com).\nIt offers three simple AI APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) on top of the base Playwright\n```\nPage\n```\n class that provide the building blocks for web automation via natural language.\nAnything that can be done in a browser can be done with Stagehand. Think about stuff like:\n1.  Log into Amazon, search for AirPods, and buy the most relevant product\n2.  Go to Hacker News and extract the top stories of the day\n3.  Go to Doordash, find the cheapest pad thai, and order it to your house\nThese automations can be built with Playwright, but it can be very cumbersome to write the code, and it will be very vulnerable to minor changes in the UI.\nStagehand‚Äôs AI, especially when combined with Browserbase‚Äôs stealth mode, make it easy to write durable code and bypass bot detection and captchas.\n##\n[‚Äã](#lights%2C-camera%2C-act)\nLights, Camera,\n```\nact()\n```\nLet‚Äôs get you started with Stagehand.\n[\n## Quickstart\nBuild browser automations in no time.\n](/get_started/quickstart)[\n## How Stagehand Works\nGo behind the scenes with Stagehand.\n](/get_started/walkthrough)\n##\n[‚Äã](#faq)\nFAQ\n###\n[‚Äã](#what-is-stagehand%3F)\nWhat is Stagehand?\nStagehand is the AI-powered successor to [Playwright](https://playwright.dev), offering three simple APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) that provide the building blocks for web automation via natural language.\nThe goal of Stagehand is to provide a lightweight model-agnostic framework, without overly complex abstractions. It‚Äôs not going to order you a pizza, but it will help you execute steps like\n```\n\"click the order button\"\n```\n.\nEach Stagehand function takes in an atomic instruction, such as\n```\nact(\"click the login button\")\n```\n or\n```\nextract(\"find the price of pad thai\")\n```\n, generates the appropriate Playwright code to accomplish that instruction, and executes it.\n###\n[‚Äã](#what-is-a-web-agent%3F)\nWhat is a web agent?\nA web agent is an AI agent that aims to browse the web like a human. They can navigate the web, interact with web pages, and perform tasks. You could imagine something like telling a bot ‚Äúhere‚Äôs my credit card, order me pad thai‚Äù and having it do that entirely autonomously.\n###\n[‚Äã](#is-stagehand-a-web-agent%3F)\nIs Stagehand a web agent?\nNo, Stagehand is not a web agent. It is a set of tools that enables and empowers web agents and developers building them. A web agent could take an instruction like ‚Äúorder me pad thai‚Äù and use Stagehand to navigate to the restaurant‚Äôs website, find the menu, and order the food.\n###\n[‚Äã](#what-are-some-best-practices-for-using-stagehand%3F)\nWhat are some best practices for using Stagehand?\nStagehand is something like Github Copilot, but for web automation. It‚Äôs not a good idea to ask it to write your entire application, but it‚Äôs great for quickly generating self-healing Playwright code to accomplish specific tasks.\nTherefore, instructions should be atomic to increase reliability, and step planning should be handled by the higher level agent. You can use\n```\nobserve()\n```\n to get a suggested list of actions that can be taken on the current page, and then use those to ground your step planning prompts.\n###\n[‚Äã](#who-built-stagehand%3F)\nWho built Stagehand?\nStagehand is open source and maintained by the [Browserbase](https://browserbase.com) team. We envision a world in which web agents are built with Stagehand on Browserbase.\nWe believe that by enabling more developers to build reliable web automations, we‚Äôll expand the market of developers who benefit from our headless browser infrastructure. This is the framework that we wished we had while tinkering on our own applications, and we‚Äôre excited to share it with you.\nIf you‚Äôve made it this far, hi mom!\n[Quickstart](/get_started/quickstart)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction#lights%2C-camera%2C-act",
        "https://docs.stagehand.dev/get_started/quickstart",
        "https://docs.stagehand.dev/get_started/walkthrough",
        "https://docs.stagehand.dev/get_started/introduction#faq",
        "https://docs.stagehand.dev/get_started/introduction#what-is-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-is-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#is-stagehand-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-are-some-best-practices-for-using-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#who-built-stagehand%3F"
      ],
      "codeExamples": [
        {
          "code": "\"click the order button\"",
          "language": "",
          "description": ""
        },
        {
          "code": "act(\"click the login button\")",
          "language": "",
          "description": ""
        },
        {
          "code": "extract(\"find the price of pad thai\")",
          "language": "",
          "description": ""
        }
      ],
      "apiSignatures": [
        {
          "name": "‚ÄãLights, Camera, act()",
          "signature": "‚ÄãLights, Camera, act()",
          "description": "Let‚Äôs get you started with Stagehand."
        }
      ],
      "tokenCount": 936,
      "isApiDoc": true,
      "hasBeenSummarized": false
    },
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYvZ2V0X3N0YXJ0ZWQvaW50cm9kdWN0aW9uI2Rv": {
      "url": "https://docs.stagehand.dev/get_started/introduction#do",
      "title": "Introduction - ü§ò Stagehand",
      "markdownContent": "Introduction - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nIntroduction\nStagehand is the easiest way to build browser automations. It is completely interoperable with [Playwright](https://playwright.dev/) and has seamless integration with [Browserbase](https://browserbase.com).\nIt offers three simple AI APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) on top of the base Playwright\n```\nPage\n```\n class that provide the building blocks for web automation via natural language.\nAnything that can be done in a browser can be done with Stagehand. Think about stuff like:\n1.  Log into Amazon, search for AirPods, and buy the most relevant product\n2.  Go to Hacker News and extract the top stories of the day\n3.  Go to Doordash, find the cheapest pad thai, and order it to your house\nThese automations can be built with Playwright, but it can be very cumbersome to write the code, and it will be very vulnerable to minor changes in the UI.\nStagehand‚Äôs AI, especially when combined with Browserbase‚Äôs stealth mode, make it easy to write durable code and bypass bot detection and captchas.\n##\n[‚Äã](#lights%2C-camera%2C-act)\nLights, Camera,\n```\nact()\n```\nLet‚Äôs get you started with Stagehand.\n[\n## Quickstart\nBuild browser automations in no time.\n](/get_started/quickstart)[\n## How Stagehand Works\nGo behind the scenes with Stagehand.\n](/get_started/walkthrough)\n##\n[‚Äã](#faq)\nFAQ\n###\n[‚Äã](#what-is-stagehand%3F)\nWhat is Stagehand?\nStagehand is the AI-powered successor to [Playwright](https://playwright.dev), offering three simple APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) that provide the building blocks for web automation via natural language.\nThe goal of Stagehand is to provide a lightweight model-agnostic framework, without overly complex abstractions. It‚Äôs not going to order you a pizza, but it will help you execute steps like\n```\n\"click the order button\"\n```\n.\nEach Stagehand function takes in an atomic instruction, such as\n```\nact(\"click the login button\")\n```\n or\n```\nextract(\"find the price of pad thai\")\n```\n, generates the appropriate Playwright code to accomplish that instruction, and executes it.\n###\n[‚Äã](#what-is-a-web-agent%3F)\nWhat is a web agent?\nA web agent is an AI agent that aims to browse the web like a human. They can navigate the web, interact with web pages, and perform tasks. You could imagine something like telling a bot ‚Äúhere‚Äôs my credit card, order me pad thai‚Äù and having it do that entirely autonomously.\n###\n[‚Äã](#is-stagehand-a-web-agent%3F)\nIs Stagehand a web agent?\nNo, Stagehand is not a web agent. It is a set of tools that enables and empowers web agents and developers building them. A web agent could take an instruction like ‚Äúorder me pad thai‚Äù and use Stagehand to navigate to the restaurant‚Äôs website, find the menu, and order the food.\n###\n[‚Äã](#what-are-some-best-practices-for-using-stagehand%3F)\nWhat are some best practices for using Stagehand?\nStagehand is something like Github Copilot, but for web automation. It‚Äôs not a good idea to ask it to write your entire application, but it‚Äôs great for quickly generating self-healing Playwright code to accomplish specific tasks.\nTherefore, instructions should be atomic to increase reliability, and step planning should be handled by the higher level agent. You can use\n```\nobserve()\n```\n to get a suggested list of actions that can be taken on the current page, and then use those to ground your step planning prompts.\n###\n[‚Äã](#who-built-stagehand%3F)\nWho built Stagehand?\nStagehand is open source and maintained by the [Browserbase](https://browserbase.com) team. We envision a world in which web agents are built with Stagehand on Browserbase.\nWe believe that by enabling more developers to build reliable web automations, we‚Äôll expand the market of developers who benefit from our headless browser infrastructure. This is the framework that we wished we had while tinkering on our own applications, and we‚Äôre excited to share it with you.\nIf you‚Äôve made it this far, hi mom!\n[Quickstart](/get_started/quickstart)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction#lights%2C-camera%2C-act",
        "https://docs.stagehand.dev/get_started/quickstart",
        "https://docs.stagehand.dev/get_started/walkthrough",
        "https://docs.stagehand.dev/get_started/introduction#faq",
        "https://docs.stagehand.dev/get_started/introduction#what-is-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-is-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#is-stagehand-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-are-some-best-practices-for-using-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#who-built-stagehand%3F"
      ],
      "codeExamples": [
        {
          "code": "\"click the order button\"",
          "language": "",
          "description": ""
        },
        {
          "code": "act(\"click the login button\")",
          "language": "",
          "description": ""
        },
        {
          "code": "extract(\"find the price of pad thai\")",
          "language": "",
          "description": ""
        }
      ],
      "apiSignatures": [
        {
          "name": "‚ÄãLights, Camera, act()",
          "signature": "‚ÄãLights, Camera, act()",
          "description": "Let‚Äôs get you started with Stagehand."
        }
      ],
      "tokenCount": 936,
      "isApiDoc": true,
      "hasBeenSummarized": false
    },
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYvZ2V0X3N0YXJ0ZWQvaW50cm9kdWN0aW9uI2dlbmVyYWwtd29ya2Zsb3c": {
      "url": "https://docs.stagehand.dev/get_started/introduction#general-workflow",
      "title": "Introduction - ü§ò Stagehand",
      "markdownContent": "Introduction - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nIntroduction\nStagehand is the easiest way to build browser automations. It is completely interoperable with [Playwright](https://playwright.dev/) and has seamless integration with [Browserbase](https://browserbase.com).\nIt offers three simple AI APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) on top of the base Playwright\n```\nPage\n```\n class that provide the building blocks for web automation via natural language.\nAnything that can be done in a browser can be done with Stagehand. Think about stuff like:\n1.  Log into Amazon, search for AirPods, and buy the most relevant product\n2.  Go to Hacker News and extract the top stories of the day\n3.  Go to Doordash, find the cheapest pad thai, and order it to your house\nThese automations can be built with Playwright, but it can be very cumbersome to write the code, and it will be very vulnerable to minor changes in the UI.\nStagehand‚Äôs AI, especially when combined with Browserbase‚Äôs stealth mode, make it easy to write durable code and bypass bot detection and captchas.\n##\n[‚Äã](#lights%2C-camera%2C-act)\nLights, Camera,\n```\nact()\n```\nLet‚Äôs get you started with Stagehand.\n[\n## Quickstart\nBuild browser automations in no time.\n](/get_started/quickstart)[\n## How Stagehand Works\nGo behind the scenes with Stagehand.\n](/get_started/walkthrough)\n##\n[‚Äã](#faq)\nFAQ\n###\n[‚Äã](#what-is-stagehand%3F)\nWhat is Stagehand?\nStagehand is the AI-powered successor to [Playwright](https://playwright.dev), offering three simple APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) that provide the building blocks for web automation via natural language.\nThe goal of Stagehand is to provide a lightweight model-agnostic framework, without overly complex abstractions. It‚Äôs not going to order you a pizza, but it will help you execute steps like\n```\n\"click the order button\"\n```\n.\nEach Stagehand function takes in an atomic instruction, such as\n```\nact(\"click the login button\")\n```\n or\n```\nextract(\"find the price of pad thai\")\n```\n, generates the appropriate Playwright code to accomplish that instruction, and executes it.\n###\n[‚Äã](#what-is-a-web-agent%3F)\nWhat is a web agent?\nA web agent is an AI agent that aims to browse the web like a human. They can navigate the web, interact with web pages, and perform tasks. You could imagine something like telling a bot ‚Äúhere‚Äôs my credit card, order me pad thai‚Äù and having it do that entirely autonomously.\n###\n[‚Äã](#is-stagehand-a-web-agent%3F)\nIs Stagehand a web agent?\nNo, Stagehand is not a web agent. It is a set of tools that enables and empowers web agents and developers building them. A web agent could take an instruction like ‚Äúorder me pad thai‚Äù and use Stagehand to navigate to the restaurant‚Äôs website, find the menu, and order the food.\n###\n[‚Äã](#what-are-some-best-practices-for-using-stagehand%3F)\nWhat are some best practices for using Stagehand?\nStagehand is something like Github Copilot, but for web automation. It‚Äôs not a good idea to ask it to write your entire application, but it‚Äôs great for quickly generating self-healing Playwright code to accomplish specific tasks.\nTherefore, instructions should be atomic to increase reliability, and step planning should be handled by the higher level agent. You can use\n```\nobserve()\n```\n to get a suggested list of actions that can be taken on the current page, and then use those to ground your step planning prompts.\n###\n[‚Äã](#who-built-stagehand%3F)\nWho built Stagehand?\nStagehand is open source and maintained by the [Browserbase](https://browserbase.com) team. We envision a world in which web agents are built with Stagehand on Browserbase.\nWe believe that by enabling more developers to build reliable web automations, we‚Äôll expand the market of developers who benefit from our headless browser infrastructure. This is the framework that we wished we had while tinkering on our own applications, and we‚Äôre excited to share it with you.\nIf you‚Äôve made it this far, hi mom!\n[Quickstart](/get_started/quickstart)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction#lights%2C-camera%2C-act",
        "https://docs.stagehand.dev/get_started/quickstart",
        "https://docs.stagehand.dev/get_started/walkthrough",
        "https://docs.stagehand.dev/get_started/introduction#faq",
        "https://docs.stagehand.dev/get_started/introduction#what-is-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-is-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#is-stagehand-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-are-some-best-practices-for-using-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#who-built-stagehand%3F"
      ],
      "codeExamples": [
        {
          "code": "\"click the order button\"",
          "language": "",
          "description": ""
        },
        {
          "code": "act(\"click the login button\")",
          "language": "",
          "description": ""
        },
        {
          "code": "extract(\"find the price of pad thai\")",
          "language": "",
          "description": ""
        }
      ],
      "apiSignatures": [
        {
          "name": "‚ÄãLights, Camera, act()",
          "signature": "‚ÄãLights, Camera, act()",
          "description": "Let‚Äôs get you started with Stagehand."
        }
      ],
      "tokenCount": 936,
      "isApiDoc": true,
      "hasBeenSummarized": false
    },
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYvZ2V0X3N0YXJ0ZWQvaW50cm9kdWN0aW9uI2JlZm9yZS15b3Utc3RhcnQ": {
      "url": "https://docs.stagehand.dev/get_started/introduction#before-you-start",
      "title": "Introduction - ü§ò Stagehand",
      "markdownContent": "Introduction - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nIntroduction\nStagehand is the easiest way to build browser automations. It is completely interoperable with [Playwright](https://playwright.dev/) and has seamless integration with [Browserbase](https://browserbase.com).\nIt offers three simple AI APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) on top of the base Playwright\n```\nPage\n```\n class that provide the building blocks for web automation via natural language.\nAnything that can be done in a browser can be done with Stagehand. Think about stuff like:\n1.  Log into Amazon, search for AirPods, and buy the most relevant product\n2.  Go to Hacker News and extract the top stories of the day\n3.  Go to Doordash, find the cheapest pad thai, and order it to your house\nThese automations can be built with Playwright, but it can be very cumbersome to write the code, and it will be very vulnerable to minor changes in the UI.\nStagehand‚Äôs AI, especially when combined with Browserbase‚Äôs stealth mode, make it easy to write durable code and bypass bot detection and captchas.\n##\n[‚Äã](#lights%2C-camera%2C-act)\nLights, Camera,\n```\nact()\n```\nLet‚Äôs get you started with Stagehand.\n[\n## Quickstart\nBuild browser automations in no time.\n](/get_started/quickstart)[\n## How Stagehand Works\nGo behind the scenes with Stagehand.\n](/get_started/walkthrough)\n##\n[‚Äã](#faq)\nFAQ\n###\n[‚Äã](#what-is-stagehand%3F)\nWhat is Stagehand?\nStagehand is the AI-powered successor to [Playwright](https://playwright.dev), offering three simple APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) that provide the building blocks for web automation via natural language.\nThe goal of Stagehand is to provide a lightweight model-agnostic framework, without overly complex abstractions. It‚Äôs not going to order you a pizza, but it will help you execute steps like\n```\n\"click the order button\"\n```\n.\nEach Stagehand function takes in an atomic instruction, such as\n```\nact(\"click the login button\")\n```\n or\n```\nextract(\"find the price of pad thai\")\n```\n, generates the appropriate Playwright code to accomplish that instruction, and executes it.\n###\n[‚Äã](#what-is-a-web-agent%3F)\nWhat is a web agent?\nA web agent is an AI agent that aims to browse the web like a human. They can navigate the web, interact with web pages, and perform tasks. You could imagine something like telling a bot ‚Äúhere‚Äôs my credit card, order me pad thai‚Äù and having it do that entirely autonomously.\n###\n[‚Äã](#is-stagehand-a-web-agent%3F)\nIs Stagehand a web agent?\nNo, Stagehand is not a web agent. It is a set of tools that enables and empowers web agents and developers building them. A web agent could take an instruction like ‚Äúorder me pad thai‚Äù and use Stagehand to navigate to the restaurant‚Äôs website, find the menu, and order the food.\n###\n[‚Äã](#what-are-some-best-practices-for-using-stagehand%3F)\nWhat are some best practices for using Stagehand?\nStagehand is something like Github Copilot, but for web automation. It‚Äôs not a good idea to ask it to write your entire application, but it‚Äôs great for quickly generating self-healing Playwright code to accomplish specific tasks.\nTherefore, instructions should be atomic to increase reliability, and step planning should be handled by the higher level agent. You can use\n```\nobserve()\n```\n to get a suggested list of actions that can be taken on the current page, and then use those to ground your step planning prompts.\n###\n[‚Äã](#who-built-stagehand%3F)\nWho built Stagehand?\nStagehand is open source and maintained by the [Browserbase](https://browserbase.com) team. We envision a world in which web agents are built with Stagehand on Browserbase.\nWe believe that by enabling more developers to build reliable web automations, we‚Äôll expand the market of developers who benefit from our headless browser infrastructure. This is the framework that we wished we had while tinkering on our own applications, and we‚Äôre excited to share it with you.\nIf you‚Äôve made it this far, hi mom!\n[Quickstart](/get_started/quickstart)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction#lights%2C-camera%2C-act",
        "https://docs.stagehand.dev/get_started/quickstart",
        "https://docs.stagehand.dev/get_started/walkthrough",
        "https://docs.stagehand.dev/get_started/introduction#faq",
        "https://docs.stagehand.dev/get_started/introduction#what-is-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-is-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#is-stagehand-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-are-some-best-practices-for-using-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#who-built-stagehand%3F"
      ],
      "codeExamples": [
        {
          "code": "\"click the order button\"",
          "language": "",
          "description": ""
        },
        {
          "code": "act(\"click the login button\")",
          "language": "",
          "description": ""
        },
        {
          "code": "extract(\"find the price of pad thai\")",
          "language": "",
          "description": ""
        }
      ],
      "apiSignatures": [
        {
          "name": "‚ÄãLights, Camera, act()",
          "signature": "‚ÄãLights, Camera, act()",
          "description": "Let‚Äôs get you started with Stagehand."
        }
      ],
      "tokenCount": 936,
      "isApiDoc": true,
      "hasBeenSummarized": false
    },
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYvZ2V0X3N0YXJ0ZWQvaW50cm9kdWN0aW9uI2NvZGVvd25lcnMtYW5kLXN1YmplY3QtbWF0dGVyLWV4cGVydHM": {
      "url": "https://docs.stagehand.dev/get_started/introduction#codeowners-and-subject-matter-experts",
      "title": "Introduction - ü§ò Stagehand",
      "markdownContent": "Introduction - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nIntroduction\nStagehand is the easiest way to build browser automations. It is completely interoperable with [Playwright](https://playwright.dev/) and has seamless integration with [Browserbase](https://browserbase.com).\nIt offers three simple AI APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) on top of the base Playwright\n```\nPage\n```\n class that provide the building blocks for web automation via natural language.\nAnything that can be done in a browser can be done with Stagehand. Think about stuff like:\n1.  Log into Amazon, search for AirPods, and buy the most relevant product\n2.  Go to Hacker News and extract the top stories of the day\n3.  Go to Doordash, find the cheapest pad thai, and order it to your house\nThese automations can be built with Playwright, but it can be very cumbersome to write the code, and it will be very vulnerable to minor changes in the UI.\nStagehand‚Äôs AI, especially when combined with Browserbase‚Äôs stealth mode, make it easy to write durable code and bypass bot detection and captchas.\n##\n[‚Äã](#lights%2C-camera%2C-act)\nLights, Camera,\n```\nact()\n```\nLet‚Äôs get you started with Stagehand.\n[\n## Quickstart\nBuild browser automations in no time.\n](/get_started/quickstart)[\n## How Stagehand Works\nGo behind the scenes with Stagehand.\n](/get_started/walkthrough)\n##\n[‚Äã](#faq)\nFAQ\n###\n[‚Äã](#what-is-stagehand%3F)\nWhat is Stagehand?\nStagehand is the AI-powered successor to [Playwright](https://playwright.dev), offering three simple APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) that provide the building blocks for web automation via natural language.\nThe goal of Stagehand is to provide a lightweight model-agnostic framework, without overly complex abstractions. It‚Äôs not going to order you a pizza, but it will help you execute steps like\n```\n\"click the order button\"\n```\n.\nEach Stagehand function takes in an atomic instruction, such as\n```\nact(\"click the login button\")\n```\n or\n```\nextract(\"find the price of pad thai\")\n```\n, generates the appropriate Playwright code to accomplish that instruction, and executes it.\n###\n[‚Äã](#what-is-a-web-agent%3F)\nWhat is a web agent?\nA web agent is an AI agent that aims to browse the web like a human. They can navigate the web, interact with web pages, and perform tasks. You could imagine something like telling a bot ‚Äúhere‚Äôs my credit card, order me pad thai‚Äù and having it do that entirely autonomously.\n###\n[‚Äã](#is-stagehand-a-web-agent%3F)\nIs Stagehand a web agent?\nNo, Stagehand is not a web agent. It is a set of tools that enables and empowers web agents and developers building them. A web agent could take an instruction like ‚Äúorder me pad thai‚Äù and use Stagehand to navigate to the restaurant‚Äôs website, find the menu, and order the food.\n###\n[‚Äã](#what-are-some-best-practices-for-using-stagehand%3F)\nWhat are some best practices for using Stagehand?\nStagehand is something like Github Copilot, but for web automation. It‚Äôs not a good idea to ask it to write your entire application, but it‚Äôs great for quickly generating self-healing Playwright code to accomplish specific tasks.\nTherefore, instructions should be atomic to increase reliability, and step planning should be handled by the higher level agent. You can use\n```\nobserve()\n```\n to get a suggested list of actions that can be taken on the current page, and then use those to ground your step planning prompts.\n###\n[‚Äã](#who-built-stagehand%3F)\nWho built Stagehand?\nStagehand is open source and maintained by the [Browserbase](https://browserbase.com) team. We envision a world in which web agents are built with Stagehand on Browserbase.\nWe believe that by enabling more developers to build reliable web automations, we‚Äôll expand the market of developers who benefit from our headless browser infrastructure. This is the framework that we wished we had while tinkering on our own applications, and we‚Äôre excited to share it with you.\nIf you‚Äôve made it this far, hi mom!\n[Quickstart](/get_started/quickstart)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction#lights%2C-camera%2C-act",
        "https://docs.stagehand.dev/get_started/quickstart",
        "https://docs.stagehand.dev/get_started/walkthrough",
        "https://docs.stagehand.dev/get_started/introduction#faq",
        "https://docs.stagehand.dev/get_started/introduction#what-is-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-is-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#is-stagehand-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-are-some-best-practices-for-using-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#who-built-stagehand%3F"
      ],
      "codeExamples": [
        {
          "code": "\"click the order button\"",
          "language": "",
          "description": ""
        },
        {
          "code": "act(\"click the login button\")",
          "language": "",
          "description": ""
        },
        {
          "code": "extract(\"find the price of pad thai\")",
          "language": "",
          "description": ""
        }
      ],
      "apiSignatures": [
        {
          "name": "‚ÄãLights, Camera, act()",
          "signature": "‚ÄãLights, Camera, act()",
          "description": "Let‚Äôs get you started with Stagehand."
        }
      ],
      "tokenCount": 936,
      "isApiDoc": true,
      "hasBeenSummarized": false
    },
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYvZ2V0X3N0YXJ0ZWQvaW50cm9kdWN0aW9uI2hlbHAtbWFrZS1ldmVyeW9uZSVFMiU4MCU5OXMtbGl2ZXMtZWFzaWVy": {
      "url": "https://docs.stagehand.dev/get_started/introduction#help-make-everyone%E2%80%99s-lives-easier",
      "title": "Introduction - ü§ò Stagehand",
      "markdownContent": "Introduction - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nIntroduction\nStagehand is the easiest way to build browser automations. It is completely interoperable with [Playwright](https://playwright.dev/) and has seamless integration with [Browserbase](https://browserbase.com).\nIt offers three simple AI APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) on top of the base Playwright\n```\nPage\n```\n class that provide the building blocks for web automation via natural language.\nAnything that can be done in a browser can be done with Stagehand. Think about stuff like:\n1.  Log into Amazon, search for AirPods, and buy the most relevant product\n2.  Go to Hacker News and extract the top stories of the day\n3.  Go to Doordash, find the cheapest pad thai, and order it to your house\nThese automations can be built with Playwright, but it can be very cumbersome to write the code, and it will be very vulnerable to minor changes in the UI.\nStagehand‚Äôs AI, especially when combined with Browserbase‚Äôs stealth mode, make it easy to write durable code and bypass bot detection and captchas.\n##\n[‚Äã](#lights%2C-camera%2C-act)\nLights, Camera,\n```\nact()\n```\nLet‚Äôs get you started with Stagehand.\n[\n## Quickstart\nBuild browser automations in no time.\n](/get_started/quickstart)[\n## How Stagehand Works\nGo behind the scenes with Stagehand.\n](/get_started/walkthrough)\n##\n[‚Äã](#faq)\nFAQ\n###\n[‚Äã](#what-is-stagehand%3F)\nWhat is Stagehand?\nStagehand is the AI-powered successor to [Playwright](https://playwright.dev), offering three simple APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) that provide the building blocks for web automation via natural language.\nThe goal of Stagehand is to provide a lightweight model-agnostic framework, without overly complex abstractions. It‚Äôs not going to order you a pizza, but it will help you execute steps like\n```\n\"click the order button\"\n```\n.\nEach Stagehand function takes in an atomic instruction, such as\n```\nact(\"click the login button\")\n```\n or\n```\nextract(\"find the price of pad thai\")\n```\n, generates the appropriate Playwright code to accomplish that instruction, and executes it.\n###\n[‚Äã](#what-is-a-web-agent%3F)\nWhat is a web agent?\nA web agent is an AI agent that aims to browse the web like a human. They can navigate the web, interact with web pages, and perform tasks. You could imagine something like telling a bot ‚Äúhere‚Äôs my credit card, order me pad thai‚Äù and having it do that entirely autonomously.\n###\n[‚Äã](#is-stagehand-a-web-agent%3F)\nIs Stagehand a web agent?\nNo, Stagehand is not a web agent. It is a set of tools that enables and empowers web agents and developers building them. A web agent could take an instruction like ‚Äúorder me pad thai‚Äù and use Stagehand to navigate to the restaurant‚Äôs website, find the menu, and order the food.\n###\n[‚Äã](#what-are-some-best-practices-for-using-stagehand%3F)\nWhat are some best practices for using Stagehand?\nStagehand is something like Github Copilot, but for web automation. It‚Äôs not a good idea to ask it to write your entire application, but it‚Äôs great for quickly generating self-healing Playwright code to accomplish specific tasks.\nTherefore, instructions should be atomic to increase reliability, and step planning should be handled by the higher level agent. You can use\n```\nobserve()\n```\n to get a suggested list of actions that can be taken on the current page, and then use those to ground your step planning prompts.\n###\n[‚Äã](#who-built-stagehand%3F)\nWho built Stagehand?\nStagehand is open source and maintained by the [Browserbase](https://browserbase.com) team. We envision a world in which web agents are built with Stagehand on Browserbase.\nWe believe that by enabling more developers to build reliable web automations, we‚Äôll expand the market of developers who benefit from our headless browser infrastructure. This is the framework that we wished we had while tinkering on our own applications, and we‚Äôre excited to share it with you.\nIf you‚Äôve made it this far, hi mom!\n[Quickstart](/get_started/quickstart)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction#lights%2C-camera%2C-act",
        "https://docs.stagehand.dev/get_started/quickstart",
        "https://docs.stagehand.dev/get_started/walkthrough",
        "https://docs.stagehand.dev/get_started/introduction#faq",
        "https://docs.stagehand.dev/get_started/introduction#what-is-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-is-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#is-stagehand-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-are-some-best-practices-for-using-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#who-built-stagehand%3F"
      ],
      "codeExamples": [
        {
          "code": "\"click the order button\"",
          "language": "",
          "description": ""
        },
        {
          "code": "act(\"click the login button\")",
          "language": "",
          "description": ""
        },
        {
          "code": "extract(\"find the price of pad thai\")",
          "language": "",
          "description": ""
        }
      ],
      "apiSignatures": [
        {
          "name": "‚ÄãLights, Camera, act()",
          "signature": "‚ÄãLights, Camera, act()",
          "description": "Let‚Äôs get you started with Stagehand."
        }
      ],
      "tokenCount": 936,
      "isApiDoc": true,
      "hasBeenSummarized": false
    },
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYvZ2V0X3N0YXJ0ZWQvZ3VpZGVz": {
      "url": "https://docs.stagehand.dev/get_started/guides",
      "title": "Examples and Guides - ü§ò Stagehand",
      "markdownContent": "Examples and Guides - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nExamples and Guides\n[\n## Check out the Playbook\nWe‚Äôve created a Github repository with plenty of ready-to-run guides for Stagehand, including persistent contexts and deploying to Vercel.\n](https://github.com/browserbase/playbook)\n##\n[‚Äã](#next-js-%2B-vercel)\nNext.js + Vercel\nCheck out the [Next.js + Vercel example](https://github.com/browserbase/stagehand-nextjs-quickstart) to see how to build a Next.js app and one-click deploy it to Vercel.\n##\n[‚Äã](#custom-llm-clients)\nCustom LLM Clients\n```bash\n```bash\n# For Vercel AI SDKnpx create-browser-app --example custom-client-aisdk# For Ollamanpx create-browser-app --example custom-client-ollama\n```\n```\nThis example shows how to use a custom LLM client in Stagehand. We have working examples for [Vercel AI SDK](https://sdk.vercel.ai/docs/introduction) and [Ollama](https://ollama.ai/). This helps you use your own LLM client in Stagehand if you don‚Äôt want to use 4o/Sonnet.\nThis helps you connect to LLMs like DeepSeek, Llama, Perplexity, Groq, and more!\n##\n[‚Äã](#persistent-contexts)\nPersistent Contexts\n```bash\n```bash\nnpx create-browser-app --example persist-context\n```\n```\nThis example uses Browserbase‚Äôs context persistence to create a persistent context that can be used across multiple runs.\nThis is really useful for automating on sites that require login, or for automating on sites that have a captcha. Once you‚Äôve logged in, you can use the same context to automate on the same site without having to log in again.\n##\n[‚Äã](#deploying-to-vercel)\nDeploying to Vercel\n```bash\n```bash\nnpx create-browser-app --example deploy-vercel\n```\n```\nThis example creates a scaffolded Vercel function that can easily be deployed to Vercel with\n```\nnpx vercel deploy\n```\n.\nIt creates a\n```\nGET\n```\n endpoint at\n```\n/api/stagehand\n```\n that can be used to run Stagehand script in\n```\nindex.ts\n```\n.\n[Contribute to Stagehand](/contributions/contributing)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction#next-js-%2B-vercel",
        "https://docs.stagehand.dev/get_started/introduction#custom-llm-clients",
        "https://docs.stagehand.dev/get_started/introduction#persistent-contexts",
        "https://docs.stagehand.dev/get_started/introduction#deploying-to-vercel",
        "https://docs.stagehand.dev/contributions/contributing"
      ],
      "codeExamples": [
        {
          "code": "# For Vercel AI SDKnpx create-browser-app --example custom-client-aisdk# For Ollamanpx create-browser-app --example custom-client-ollama",
          "language": "",
          "description": "‚ÄãCustom LLM Clients"
        },
        {
          "code": "# For Vercel AI SDKnpx create-browser-app --example custom-client-aisdk# For Ollamanpx create-browser-app --example custom-client-ollama",
          "language": "",
          "description": ""
        },
        {
          "code": "# For Vercel AI SDKnpx create-browser-app --example custom-client-aisdk# For Ollamanpx create-browser-app --example custom-client-ollama",
          "language": "bash",
          "description": ""
        },
        {
          "code": "# For Vercel AI SDKnpx create-browser-app --example custom-client-aisdk# For Ollamanpx create-browser-app --example custom-client-ollama",
          "language": "bash",
          "description": ""
        },
        {
          "code": "npx create-browser-app --example persist-context",
          "language": "",
          "description": "‚ÄãPersistent Contexts"
        },
        {
          "code": "npx create-browser-app --example persist-context",
          "language": "",
          "description": ""
        },
        {
          "code": "npx create-browser-app --example persist-context",
          "language": "bash",
          "description": ""
        },
        {
          "code": "npx create-browser-app --example persist-context",
          "language": "bash",
          "description": ""
        },
        {
          "code": "npx create-browser-app --example deploy-vercel",
          "language": "",
          "description": "‚ÄãDeploying to Vercel"
        },
        {
          "code": "npx create-browser-app --example deploy-vercel",
          "language": "",
          "description": ""
        },
        {
          "code": "npx create-browser-app --example deploy-vercel",
          "language": "bash",
          "description": ""
        },
        {
          "code": "npx create-browser-app --example deploy-vercel",
          "language": "bash",
          "description": ""
        },
        {
          "code": "npx vercel deploy",
          "language": "",
          "description": ""
        },
        {
          "code": "/api/stagehand",
          "language": "",
          "description": ""
        }
      ],
      "apiSignatures": [],
      "tokenCount": 437,
      "isApiDoc": false,
      "hasBeenSummarized": false
    },
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYvZ2V0X3N0YXJ0ZWQvaW50cm9kdWN0aW9uI3BlcnNpc3RlbnQtY29udGV4dHM": {
      "url": "https://docs.stagehand.dev/get_started/introduction#persistent-contexts",
      "title": "Introduction - ü§ò Stagehand",
      "markdownContent": "Introduction - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nIntroduction\nStagehand is the easiest way to build browser automations. It is completely interoperable with [Playwright](https://playwright.dev/) and has seamless integration with [Browserbase](https://browserbase.com).\nIt offers three simple AI APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) on top of the base Playwright\n```\nPage\n```\n class that provide the building blocks for web automation via natural language.\nAnything that can be done in a browser can be done with Stagehand. Think about stuff like:\n1.  Log into Amazon, search for AirPods, and buy the most relevant product\n2.  Go to Hacker News and extract the top stories of the day\n3.  Go to Doordash, find the cheapest pad thai, and order it to your house\nThese automations can be built with Playwright, but it can be very cumbersome to write the code, and it will be very vulnerable to minor changes in the UI.\nStagehand‚Äôs AI, especially when combined with Browserbase‚Äôs stealth mode, make it easy to write durable code and bypass bot detection and captchas.\n##\n[‚Äã](#lights%2C-camera%2C-act)\nLights, Camera,\n```\nact()\n```\nLet‚Äôs get you started with Stagehand.\n[\n## Quickstart\nBuild browser automations in no time.\n](/get_started/quickstart)[\n## How Stagehand Works\nGo behind the scenes with Stagehand.\n](/get_started/walkthrough)\n##\n[‚Äã](#faq)\nFAQ\n###\n[‚Äã](#what-is-stagehand%3F)\nWhat is Stagehand?\nStagehand is the AI-powered successor to [Playwright](https://playwright.dev), offering three simple APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) that provide the building blocks for web automation via natural language.\nThe goal of Stagehand is to provide a lightweight model-agnostic framework, without overly complex abstractions. It‚Äôs not going to order you a pizza, but it will help you execute steps like\n```\n\"click the order button\"\n```\n.\nEach Stagehand function takes in an atomic instruction, such as\n```\nact(\"click the login button\")\n```\n or\n```\nextract(\"find the price of pad thai\")\n```\n, generates the appropriate Playwright code to accomplish that instruction, and executes it.\n###\n[‚Äã](#what-is-a-web-agent%3F)\nWhat is a web agent?\nA web agent is an AI agent that aims to browse the web like a human. They can navigate the web, interact with web pages, and perform tasks. You could imagine something like telling a bot ‚Äúhere‚Äôs my credit card, order me pad thai‚Äù and having it do that entirely autonomously.\n###\n[‚Äã](#is-stagehand-a-web-agent%3F)\nIs Stagehand a web agent?\nNo, Stagehand is not a web agent. It is a set of tools that enables and empowers web agents and developers building them. A web agent could take an instruction like ‚Äúorder me pad thai‚Äù and use Stagehand to navigate to the restaurant‚Äôs website, find the menu, and order the food.\n###\n[‚Äã](#what-are-some-best-practices-for-using-stagehand%3F)\nWhat are some best practices for using Stagehand?\nStagehand is something like Github Copilot, but for web automation. It‚Äôs not a good idea to ask it to write your entire application, but it‚Äôs great for quickly generating self-healing Playwright code to accomplish specific tasks.\nTherefore, instructions should be atomic to increase reliability, and step planning should be handled by the higher level agent. You can use\n```\nobserve()\n```\n to get a suggested list of actions that can be taken on the current page, and then use those to ground your step planning prompts.\n###\n[‚Äã](#who-built-stagehand%3F)\nWho built Stagehand?\nStagehand is open source and maintained by the [Browserbase](https://browserbase.com) team. We envision a world in which web agents are built with Stagehand on Browserbase.\nWe believe that by enabling more developers to build reliable web automations, we‚Äôll expand the market of developers who benefit from our headless browser infrastructure. This is the framework that we wished we had while tinkering on our own applications, and we‚Äôre excited to share it with you.\nIf you‚Äôve made it this far, hi mom!\n[Quickstart](/get_started/quickstart)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction#lights%2C-camera%2C-act",
        "https://docs.stagehand.dev/get_started/quickstart",
        "https://docs.stagehand.dev/get_started/walkthrough",
        "https://docs.stagehand.dev/get_started/introduction#faq",
        "https://docs.stagehand.dev/get_started/introduction#what-is-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-is-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#is-stagehand-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-are-some-best-practices-for-using-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#who-built-stagehand%3F"
      ],
      "codeExamples": [
        {
          "code": "\"click the order button\"",
          "language": "",
          "description": ""
        },
        {
          "code": "act(\"click the login button\")",
          "language": "",
          "description": ""
        },
        {
          "code": "extract(\"find the price of pad thai\")",
          "language": "",
          "description": ""
        }
      ],
      "apiSignatures": [
        {
          "name": "‚ÄãLights, Camera, act()",
          "signature": "‚ÄãLights, Camera, act()",
          "description": "Let‚Äôs get you started with Stagehand."
        }
      ],
      "tokenCount": 936,
      "isApiDoc": true,
      "hasBeenSummarized": false
    },
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYvZ2V0X3N0YXJ0ZWQvaW50cm9kdWN0aW9uI2N1c3RvbS1sbG0tY2xpZW50cw": {
      "url": "https://docs.stagehand.dev/get_started/introduction#custom-llm-clients",
      "title": "Introduction - ü§ò Stagehand",
      "markdownContent": "Introduction - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nIntroduction\nStagehand is the easiest way to build browser automations. It is completely interoperable with [Playwright](https://playwright.dev/) and has seamless integration with [Browserbase](https://browserbase.com).\nIt offers three simple AI APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) on top of the base Playwright\n```\nPage\n```\n class that provide the building blocks for web automation via natural language.\nAnything that can be done in a browser can be done with Stagehand. Think about stuff like:\n1.  Log into Amazon, search for AirPods, and buy the most relevant product\n2.  Go to Hacker News and extract the top stories of the day\n3.  Go to Doordash, find the cheapest pad thai, and order it to your house\nThese automations can be built with Playwright, but it can be very cumbersome to write the code, and it will be very vulnerable to minor changes in the UI.\nStagehand‚Äôs AI, especially when combined with Browserbase‚Äôs stealth mode, make it easy to write durable code and bypass bot detection and captchas.\n##\n[‚Äã](#lights%2C-camera%2C-act)\nLights, Camera,\n```\nact()\n```\nLet‚Äôs get you started with Stagehand.\n[\n## Quickstart\nBuild browser automations in no time.\n](/get_started/quickstart)[\n## How Stagehand Works\nGo behind the scenes with Stagehand.\n](/get_started/walkthrough)\n##\n[‚Äã](#faq)\nFAQ\n###\n[‚Äã](#what-is-stagehand%3F)\nWhat is Stagehand?\nStagehand is the AI-powered successor to [Playwright](https://playwright.dev), offering three simple APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) that provide the building blocks for web automation via natural language.\nThe goal of Stagehand is to provide a lightweight model-agnostic framework, without overly complex abstractions. It‚Äôs not going to order you a pizza, but it will help you execute steps like\n```\n\"click the order button\"\n```\n.\nEach Stagehand function takes in an atomic instruction, such as\n```\nact(\"click the login button\")\n```\n or\n```\nextract(\"find the price of pad thai\")\n```\n, generates the appropriate Playwright code to accomplish that instruction, and executes it.\n###\n[‚Äã](#what-is-a-web-agent%3F)\nWhat is a web agent?\nA web agent is an AI agent that aims to browse the web like a human. They can navigate the web, interact with web pages, and perform tasks. You could imagine something like telling a bot ‚Äúhere‚Äôs my credit card, order me pad thai‚Äù and having it do that entirely autonomously.\n###\n[‚Äã](#is-stagehand-a-web-agent%3F)\nIs Stagehand a web agent?\nNo, Stagehand is not a web agent. It is a set of tools that enables and empowers web agents and developers building them. A web agent could take an instruction like ‚Äúorder me pad thai‚Äù and use Stagehand to navigate to the restaurant‚Äôs website, find the menu, and order the food.\n###\n[‚Äã](#what-are-some-best-practices-for-using-stagehand%3F)\nWhat are some best practices for using Stagehand?\nStagehand is something like Github Copilot, but for web automation. It‚Äôs not a good idea to ask it to write your entire application, but it‚Äôs great for quickly generating self-healing Playwright code to accomplish specific tasks.\nTherefore, instructions should be atomic to increase reliability, and step planning should be handled by the higher level agent. You can use\n```\nobserve()\n```\n to get a suggested list of actions that can be taken on the current page, and then use those to ground your step planning prompts.\n###\n[‚Äã](#who-built-stagehand%3F)\nWho built Stagehand?\nStagehand is open source and maintained by the [Browserbase](https://browserbase.com) team. We envision a world in which web agents are built with Stagehand on Browserbase.\nWe believe that by enabling more developers to build reliable web automations, we‚Äôll expand the market of developers who benefit from our headless browser infrastructure. This is the framework that we wished we had while tinkering on our own applications, and we‚Äôre excited to share it with you.\nIf you‚Äôve made it this far, hi mom!\n[Quickstart](/get_started/quickstart)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction#lights%2C-camera%2C-act",
        "https://docs.stagehand.dev/get_started/quickstart",
        "https://docs.stagehand.dev/get_started/walkthrough",
        "https://docs.stagehand.dev/get_started/introduction#faq",
        "https://docs.stagehand.dev/get_started/introduction#what-is-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-is-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#is-stagehand-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-are-some-best-practices-for-using-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#who-built-stagehand%3F"
      ],
      "codeExamples": [
        {
          "code": "\"click the order button\"",
          "language": "",
          "description": ""
        },
        {
          "code": "act(\"click the login button\")",
          "language": "",
          "description": ""
        },
        {
          "code": "extract(\"find the price of pad thai\")",
          "language": "",
          "description": ""
        }
      ],
      "apiSignatures": [
        {
          "name": "‚ÄãLights, Camera, act()",
          "signature": "‚ÄãLights, Camera, act()",
          "description": "Let‚Äôs get you started with Stagehand."
        }
      ],
      "tokenCount": 936,
      "isApiDoc": true,
      "hasBeenSummarized": false
    },
    "aHR0cHM6Ly9kb2NzLnN0YWdlaGFuZC5kZXYvZ2V0X3N0YXJ0ZWQvaW50cm9kdWN0aW9uI25leHQtanMtJTJCLXZlcmNlbA": {
      "url": "https://docs.stagehand.dev/get_started/introduction#next-js-%2B-vercel",
      "title": "Introduction - ü§ò Stagehand",
      "markdownContent": "Introduction - ü§ò Stagehand\n[ü§ò Stagehand home page](https://docs.stagehand.dev)\nSearch...\nNavigation\nGet Started\nIntroduction\nStagehand is the easiest way to build browser automations. It is completely interoperable with [Playwright](https://playwright.dev/) and has seamless integration with [Browserbase](https://browserbase.com).\nIt offers three simple AI APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) on top of the base Playwright\n```\nPage\n```\n class that provide the building blocks for web automation via natural language.\nAnything that can be done in a browser can be done with Stagehand. Think about stuff like:\n1.  Log into Amazon, search for AirPods, and buy the most relevant product\n2.  Go to Hacker News and extract the top stories of the day\n3.  Go to Doordash, find the cheapest pad thai, and order it to your house\nThese automations can be built with Playwright, but it can be very cumbersome to write the code, and it will be very vulnerable to minor changes in the UI.\nStagehand‚Äôs AI, especially when combined with Browserbase‚Äôs stealth mode, make it easy to write durable code and bypass bot detection and captchas.\n##\n[‚Äã](#lights%2C-camera%2C-act)\nLights, Camera,\n```\nact()\n```\nLet‚Äôs get you started with Stagehand.\n[\n## Quickstart\nBuild browser automations in no time.\n](/get_started/quickstart)[\n## How Stagehand Works\nGo behind the scenes with Stagehand.\n](/get_started/walkthrough)\n##\n[‚Äã](#faq)\nFAQ\n###\n[‚Äã](#what-is-stagehand%3F)\nWhat is Stagehand?\nStagehand is the AI-powered successor to [Playwright](https://playwright.dev), offering three simple APIs (\n```\nact\n```\n,\n```\nextract\n```\n, and\n```\nobserve\n```\n) that provide the building blocks for web automation via natural language.\nThe goal of Stagehand is to provide a lightweight model-agnostic framework, without overly complex abstractions. It‚Äôs not going to order you a pizza, but it will help you execute steps like\n```\n\"click the order button\"\n```\n.\nEach Stagehand function takes in an atomic instruction, such as\n```\nact(\"click the login button\")\n```\n or\n```\nextract(\"find the price of pad thai\")\n```\n, generates the appropriate Playwright code to accomplish that instruction, and executes it.\n###\n[‚Äã](#what-is-a-web-agent%3F)\nWhat is a web agent?\nA web agent is an AI agent that aims to browse the web like a human. They can navigate the web, interact with web pages, and perform tasks. You could imagine something like telling a bot ‚Äúhere‚Äôs my credit card, order me pad thai‚Äù and having it do that entirely autonomously.\n###\n[‚Äã](#is-stagehand-a-web-agent%3F)\nIs Stagehand a web agent?\nNo, Stagehand is not a web agent. It is a set of tools that enables and empowers web agents and developers building them. A web agent could take an instruction like ‚Äúorder me pad thai‚Äù and use Stagehand to navigate to the restaurant‚Äôs website, find the menu, and order the food.\n###\n[‚Äã](#what-are-some-best-practices-for-using-stagehand%3F)\nWhat are some best practices for using Stagehand?\nStagehand is something like Github Copilot, but for web automation. It‚Äôs not a good idea to ask it to write your entire application, but it‚Äôs great for quickly generating self-healing Playwright code to accomplish specific tasks.\nTherefore, instructions should be atomic to increase reliability, and step planning should be handled by the higher level agent. You can use\n```\nobserve()\n```\n to get a suggested list of actions that can be taken on the current page, and then use those to ground your step planning prompts.\n###\n[‚Äã](#who-built-stagehand%3F)\nWho built Stagehand?\nStagehand is open source and maintained by the [Browserbase](https://browserbase.com) team. We envision a world in which web agents are built with Stagehand on Browserbase.\nWe believe that by enabling more developers to build reliable web automations, we‚Äôll expand the market of developers who benefit from our headless browser infrastructure. This is the framework that we wished we had while tinkering on our own applications, and we‚Äôre excited to share it with you.\nIf you‚Äôve made it this far, hi mom!\n[Quickstart](/get_started/quickstart)",
      "links": [
        "https://docs.stagehand.dev/",
        "https://docs.stagehand.dev/get_started/introduction#lights%2C-camera%2C-act",
        "https://docs.stagehand.dev/get_started/quickstart",
        "https://docs.stagehand.dev/get_started/walkthrough",
        "https://docs.stagehand.dev/get_started/introduction#faq",
        "https://docs.stagehand.dev/get_started/introduction#what-is-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-is-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#is-stagehand-a-web-agent%3F",
        "https://docs.stagehand.dev/get_started/introduction#what-are-some-best-practices-for-using-stagehand%3F",
        "https://docs.stagehand.dev/get_started/introduction#who-built-stagehand%3F"
      ],
      "codeExamples": [
        {
          "code": "\"click the order button\"",
          "language": "",
          "description": ""
        },
        {
          "code": "act(\"click the login button\")",
          "language": "",
          "description": ""
        },
        {
          "code": "extract(\"find the price of pad thai\")",
          "language": "",
          "description": ""
        }
      ],
      "apiSignatures": [
        {
          "name": "‚ÄãLights, Camera, act()",
          "signature": "‚ÄãLights, Camera, act()",
          "description": "Let‚Äôs get you started with Stagehand."
        }
      ],
      "tokenCount": 936,
      "isApiDoc": true,
      "hasBeenSummarized": false
    }
  },
  "summaries": {}
}